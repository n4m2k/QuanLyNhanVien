{"version":3,"sources":["app/views/Employees/TabPanelForm/EmployeeForm.jsx","app/views/Employees/TabPanelForm/AddCertificateForm.jsx","app/views/Employees/TabPanelForm/FamilyRelationshipForm.jsx","app/views/Employees/EmployeeDialog.jsx","app/views/Employees/Employee.jsx","app/views/Component/Dialog/ConfirmDialog.js","app/Validate/Validate.js","app/views/RegisterEmployees/SubMissionDialog.jsx","app/views/RegisterEmployees/RegisterEmployee.jsx"],"names":["EmployeeForm","_ref","_GENDER$find","handleInputChange","employee","setEmployee","isViewMode","_useState","useState","image","_useState2","Object","slicedToArray","imagePreview","setImagePreview","react_default","a","createElement","Grid","container","spacing","item","lg","md","sm","xs","direction","alignItems","justify","Avatar","alt","src","isBase64Image","className","Button","variant","color","component","disabled","type","name","accept","style","display","onChange","e","file","target","files","formData","FormData","append","reader","FileReader","onload","result","readAsDataURL","uploadImage","then","response","getImage","data","res","updatedEmployee","objectSpread2","config","url","value","lib","id","label","code","fullWidth","validators","concat","moment","format","errorMessages","placeholder","size","InputProps","readOnly","FormControl","GENDER","find","_employee$gender","gender","toString","map","MenuItem","key","dateOfBirth","InputLabelProps","shrink","inputProps","max","address","team","TEAM","citizenIdentificationNumber","phone","email","ethnic","religion","dateOfIssuanceCard","placeOfIssueCard","AddCertificateForm","certificate","setCertificate","dispatch","useDispatch","t","useTranslation","isUpdated","setIsUpdated","_useState3","_useState4","showDeleteDialog","setShowDeleteDialog","certificateReducer","useSelector","state","certificates","_useState5","_useState6","certificateId","setCertificateId","_useState7","certificateName","issueDate","content","field","_useState8","certificateData","setCertificateData","useEffect","getCertificateByIdRequest","handleChange","[object Object]","columns","title","render","rowData","tableData","width","align","row","IconButton","onClick","handleViewCertificate","Icon","handleEdit","handleDelete","handleReset","handleCloseDeleteDialog","_item$tableData2","onSubmit","dataTemp","employeeId","updateCertificate","updatedCertificateIndex","findIndex","_item$tableData","_certificateData$tabl","newListCertificate","toConsumableArray","toast","success","error","handleUpdateCertificate","addCertificate","handleAddCertificate","MaterialTableComponent","height","ConfirmationDialog","open","onConfirmDialogClose","onYesClick","deleteCertificate","filter","_item$tableData3","text","Yes","No","FamilyRelationshipForm","_GENDER$find2","family","setFamily","familyReducer","listFamily","familyId","setFamilyId","relationShip","phoneNumber","familyFormData","setFamilyFormData","getFamilyByIdRequest","handleViewFamily","_RELATIONSHIP$find","RELATIONSHIP","handleAddFamily","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","addFamily","stop","apply","this","arguments","handleUpdateFamily","_ref3","_callee2","updatedFamilyIndex","_context2","updateFamily","_familyFormData$table","handleDeleteFamily","_ref4","_callee3","_context3","deleteFamily","_familyFormData$gende","i","useStyles","makeStyles","colorStyle","iconClose","position","right","top","EmployeeDialog","onClose","classes","setValue","openRegisterDialog","setOpenRegisterDialog","handleClose","checkEmployees","countObjectKeys","TOTAL_OBJECTS_KEY_EMPLOYEE","KEY","handleOpenRegisterDialog","updateEmployees","STATUS_OF_EMPLOYEE","t0","Dialog","aria-labelledby","maxWidth","DialogTitle","aria-label","Close","Tabs","event","newValue","warning","centered","textColor","Tab","TAB_EMPLOYEE","NHAN_VIEN","LABEL","CHUNG_CHI","GIA_DINH","DialogContent","dividers","TabPanelForm_AddCertificateForm","TabPanelForm_FamilyRelationshipForm","preventDefault","certificatesDto","employeeFamilyDtos","addEmployees","TabPanelForm_EmployeeForm","DialogActions","RegisterEmployee","handleCloseRegisterDialog","handleCloseEmployeeDialog","customStyle","justifyContent","Employee","showDialogEmployee","setShowDialogEmployee","showViewDetails","setShowViewDetails","setEmployeeId","_useState9","_useState10","_useState11","_useState12","keywords","setKeywords","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","page","setPage","_useState19","_useState20","rowPerPage","setRowPerPage","_useState21","_useState22","setIsViewMode","employeesData","employees","totalRecords","totalElements","employeeReducer","getAllEmployeeRequest","status","keyword","submitProfileStatus","STATUS_EMPLOYEE","CHO_DUYET","CODE","handleViewEmployee","LUU_MOI","YEU_CAU_BO_SUNG","DA_TU_CHOI","_TEAM$find","_STATUSES$find","STATUSES","Number","handleOpenDialogEmloyee","BreadcrumbComponent","manage","SearchComponent","PaginationComponent","Employees_EmployeeDialog","deleteEmployees","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","react_i18next__WEBPACK_IMPORTED_MODULE_5__","ConfirmDialog","handleDialogConfirm","d","__webpack_exports__","isAfterOrEqualToToday","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","n","inputDate","today","Date","setHours","getTime","ValidatorForm","addValidationRule","selectedDate","eighteenYearsAgo","subtract","isSameOrBefore","SubMissionDialog","handleCloseSubMissionDialog","openConfirmDialog","setOpenConfirmDialog","numberSaved","decisionDay","decisionInput","setDecisionInput","regexPattern","RegExp","slice","test","closeConfirmDialog","DA_NOP_LUU","STATUS_OF_END_EMPLOYEE","decision","submitRef","useRef","openSubmitLeaderDialog","setOpenSubmitLeaderDialog","openSubMissionDialog","setOpenSubMissionDialog","employeeDetail","getEmployeeByIdRequest","Paper","Box","sx","flexGrow","orientation","borderRight","borderColor","TAB_REGISTER","HO_SO","SO_YEU_LY_LICH","VAN_BANG","ProfileForm","InformationForm","CertificateForm","DA_KET_THUC","_submitRef$current","current","click","skill","activity","_employee$knowledge","_employee$skill","_employee$activity","knowledge","trim","SubmitLeaderDialog","handleCloseSubmitLeaderDialog","RegisterEmployees_SubMissionDialog"],"mappings":"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","file":"static/js/10.45a12676.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../../../styles/views/_style.scss\";\r\nimport { MenuItem, Grid, FormControl, Avatar, Button } from \"@material-ui/core\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n} from \"react-material-ui-form-validator\";\r\nimport { GENDER, TEAM } from \"app/Constants/ListSelectItem\";\r\nimport { isBase64Image } from \"utils\";\r\nimport { getImage, uploadImage } from \"app/redux/api/apiEmployees\";\r\nimport moment from \"moment/moment\";\r\nimport \"../../../Validate/Validate\";\r\nconst EmployeeForm = ({\r\n  handleInputChange,\r\n  employee,\r\n  setEmployee,\r\n  isViewMode,\r\n}) => {\r\n  const [imagePreview, setImagePreview] = useState(employee?.image || \"\");\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      uploadImage(formData).then((response) =>\r\n        getImage(response.data.name).then((res) => {\r\n          const updatedEmployee = { ...employee, image: res.config.url };\r\n          setEmployee(updatedEmployee);\r\n        })\r\n      );\r\n    }\r\n    e.target.value = \"\";\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          container\r\n          item\r\n          lg={4}\r\n          md={4}\r\n          sm={12}\r\n          xs={12}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            src={isBase64Image(imagePreview) ? imagePreview : employee?.image}\r\n            className=\"avatar-class mb-12\"\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"upload-image\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            disabled={isViewMode}\r\n          >\r\n            Chọn ảnh\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              onChange={handleImageChange}\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={8} md={8} sm={12} xs={12}>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                id=\"outlined-basic\"\r\n                name=\"code\"\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    Mã nhân viên\r\n                  </span>\r\n                }\r\n                value={employee?.code || \"\"}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                validators={[\"required\", `matchRegexp:^NV${moment().format('YY')}\\\\d{3}$`]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập mã code\",\r\n                  \"Mã nhân viên không hợp lệ. Gợi ý: NV + Năm hiện tại + 3 số\",\r\n                ]}\r\n                placeholder=\"Gợi ý: NV23000\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                name=\"name\"\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    Họ và tên nhân viên\r\n                  </span>\r\n                }\r\n                value={employee?.name || \"\"}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                validators={[\r\n                  \"required\",\r\n                  'matchRegexp:^[^0-9!@#$%^&*(),.?\":{}|<>]+$',\r\n                  'maxStringLength:30'\r\n                ]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập tên\",\r\n                  \"Tên không chứa số và kí tự đặc biệt\",\r\n                  \"Tên không quá 30 ký tự\"\r\n                ]}\r\n                placeholder=\"Nhập Họ và tên\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <FormControl fullWidth>\r\n                <SelectValidator\r\n                  name=\"gender\"\r\n                  value={\r\n                    GENDER.find(\r\n                      (item) => item.id === employee?.gender?.toString()\r\n                    )?.id || \"\"\r\n                  }\r\n                  label={\r\n                    <span>\r\n                      <span className=\"red-color\"> * </span>\r\n                      Giới tính\r\n                    </span>\r\n                  }\r\n                  onChange={handleInputChange}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng chọn giới tính\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  disabled={isViewMode}\r\n                >\r\n                  {GENDER &&\r\n                    GENDER.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                </SelectValidator>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Ngày sinh\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                type=\"date\"\r\n                name=\"dateOfBirth\"\r\n                value={\r\n                  employee?.dateOfBirth\r\n                    ? moment(employee?.dateOfBirth).format(\"YYYY-MM-DD\")\r\n                    : \"\"\r\n                }\r\n                fullWidth\r\n                validators={[\"required\", \"equalEighteenYearsAgo\"]}\r\n                errorMessages={[\"Vui lòng nhập ngày sinh\", \"Phải trên 18 tuổi\"]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                  inputProps: {\r\n                    max: moment().format(\"YYYY-MM-DD\"),\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                name=\"address\"\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    Địa chỉ\r\n                  </span>\r\n                }\r\n                value={employee?.address || \"\"}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                validators={[\"required\", 'maxStringLength:60']}\r\n                errorMessages={[\"Vui lòng nhập địa chỉ\", \"Địa chỉ không quá 60 ký tự\"]}\r\n                placeholder=\"Nhập địa chỉ\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <FormControl fullWidth>\r\n                <SelectValidator\r\n                  name=\"team\"\r\n                  value={employee?.team || \"\"}\r\n                  label={\r\n                    <span>\r\n                      <span className=\"red-color\"> * </span>\r\n                      Nhóm\r\n                    </span>\r\n                  }\r\n                  onChange={handleInputChange}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng chọn nhóm\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  disabled={isViewMode}\r\n                >\r\n                  {TEAM &&\r\n                    TEAM.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                </SelectValidator>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Căn cước công dân\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                name=\"citizenIdentificationNumber\"\r\n                value={employee?.citizenIdentificationNumber}\r\n                fullWidth\r\n                validators={[\"required\", \"isNumber\", \"matchRegexp:^\\\\d{12}$\"]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập căn cước công dân\",\r\n                  \"Căn cước công dân phải là số\",\r\n                  \"Căn cước công dân phải 12 số\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Số điện thoại\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                name=\"phone\"\r\n                value={employee?.phone}\r\n                fullWidth\r\n                validators={[\r\n                  \"required\",\r\n                  \"isNumber\",\r\n                  \"matchRegexp:^([0]{1}[0-9]{9})?$\",\r\n                ]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập số điện thoại\",\r\n                  \"Số điện thoại phải là số\",\r\n                  \"Số điện thoại không hợp lệ\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Email\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={employee?.email}\r\n                fullWidth\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập email\",\r\n                  \"Email không đúng định dạng\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Dân tộc\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                name=\"ethnic\"\r\n                value={employee?.ethnic}\r\n                fullWidth\r\n                validators={[\r\n                  \"required\",\r\n                  'matchRegexp:^[^0-9!@#$%^&*(),.?\":{}|<>]+$',\r\n                ]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập dân tộc\",\r\n                  \"Dân tộc không chứa kí tự đặc biệt\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Tôn giáo\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                name=\"religion\"\r\n                value={employee?.religion}\r\n                fullWidth\r\n                validators={[\r\n                  \"required\",\r\n                  'matchRegexp:^[^0-9!@#$%^&*(),.?\":{}|<>]+$',\r\n                ]}\r\n                errorMessages={[\r\n                  \"Vui lòng nhập tôn giáo\",\r\n                  \"Tôn giáo không chứa kí tự đặc biệt\",\r\n                ]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Ngày cấp\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                type=\"date\"\r\n                name=\"dateOfIssuanceCard\"\r\n                value={\r\n                  employee?.dateOfIssuanceCard\r\n                    ? moment(employee?.dateOfIssuanceCard).format(\"YYYY-MM-DD\")\r\n                    : \"\"\r\n                }\r\n                fullWidth\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"Vui lòng nhập ngày cấp\"]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                  inputProps: {\r\n                    max: moment().format(\"YYYY-MM-DD\"),\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    {\"Nơi cấp\"}\r\n                  </span>\r\n                }\r\n                onChange={handleInputChange}\r\n                name=\"placeOfIssueCard\"\r\n                value={employee?.placeOfIssueCard || \"\"}\r\n                fullWidth\r\n                validators={[\"required\", 'maxStringLength:60']}\r\n                errorMessages={[\"Vui lòng nhập nơi cấp\", \"Nơi cấp không quá 60 ký tự\"]}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ConfirmationDialog from \"egret/components/ConfirmationDialog\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Icon, IconButton, Grid } from \"@material-ui/core\";\r\nimport moment from \"moment/moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  addCertificate,\r\n  deleteCertificate,\r\n  getCertificateByIdRequest,\r\n  updateCertificate,\r\n} from \"app/redux/actions/CertificateAction\";\r\nimport MaterialTableComponent from \"app/views/Component/MaterialTableComponent/MaterialTableComponent\";\r\n\r\nconst AddCertificateForm = ({\r\n  employee,\r\n  certificate,\r\n  setCertificate,\r\n  isViewMode,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const certificateReducer = useSelector(\r\n    (state) => state.certificates.certificates\r\n  );\r\n  const [certificateId, setCertificateId] = useState(\"\");\r\n  const [certificateData, setCertificateData] = useState({\r\n    certificateName: \"\",\r\n    issueDate: \"\",\r\n    content: \"\",\r\n    field: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (employee?.id) {\r\n      dispatch(getCertificateByIdRequest(employee?.id));\r\n    }\r\n  }, [dispatch, employee]);\r\n\r\n  const handleChange = (e) => {\r\n    setCertificateData({\r\n      ...certificateData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      render: (rowData) => rowData.tableData.id + 1,\r\n      width: \"5%\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <div className=\"flex-icon\">\r\n            {isViewMode ? (\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  handleViewCertificate(row);\r\n                }}\r\n              >\r\n                <Icon color=\"primary\">visibility</Icon>\r\n              </IconButton>\r\n            ) : (\r\n              <div>\r\n                <IconButton>\r\n                  <Icon\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      handleEdit(row);\r\n                    }}\r\n                  >\r\n                    edit\r\n                  </Icon>\r\n                </IconButton>\r\n                <IconButton>\r\n                  <Icon\r\n                    color=\"error\"\r\n                    onClick={() => {\r\n                      handleDelete(row);\r\n                    }}\r\n                  >\r\n                    delete\r\n                  </Icon>\r\n                </IconButton>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"certificateName\",\r\n      title: \"Tên văn bằng\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      field: \"field\",\r\n      title: \"Xếp loại\",\r\n      width: \"20%\",\r\n      render: (row) => <span className=\"address-column\">{row.field}</span>,\r\n    },\r\n    {\r\n      field: \"issueDate\",\r\n      title: \"Ngày cấp\",\r\n      width: \"10%\",\r\n      render: (row) => moment(row.issueDate).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      field: \"content\",\r\n      title: \"Nội dung\",\r\n      width: \"35%\",\r\n    },\r\n  ];\r\n\r\n  const handleEdit = (item) => {\r\n    setCertificateData({\r\n      ...item,\r\n      issueDate: moment(item?.issueDate).format(\"YYYY-MM-DD\"),\r\n    });\r\n    setIsUpdated(true);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setCertificateData({\r\n      certificateName: \"\",\r\n      issueDate: \"\",\r\n      content: \"\",\r\n      field: \"\",\r\n    });\r\n    setIsUpdated(false);\r\n  };\r\n\r\n  const handleAddCertificate = () => {\r\n    const dataTemp = {\r\n      ...certificateData,\r\n      employeeId: employee?.id,\r\n    };\r\n    if (employee?.id) {\r\n      dispatch(addCertificate(employee?.id, [dataTemp]));\r\n    } else {\r\n      setCertificate([...certificate, dataTemp]);\r\n      toast.success(\"Thêm thành công!\");\r\n    }\r\n    handleReset();\r\n  };\r\n\r\n  const handleUpdateCertificate = () => {\r\n    const dataTemp = {\r\n      ...certificateData,\r\n      employeeId: employee.id,\r\n    };\r\n    if (employee?.id) {\r\n      dispatch(updateCertificate(dataTemp));\r\n    } else {\r\n      const updatedCertificateIndex = certificate.findIndex(\r\n        (item) => item?.tableData?.id === certificateData?.tableData?.id\r\n      );\r\n      if (updatedCertificateIndex !== -1) {\r\n        const newListCertificate = [...certificate];\r\n        newListCertificate[updatedCertificateIndex] = dataTemp;\r\n        setCertificate(newListCertificate);\r\n        toast.success(\"Cập nhật thành công!\");\r\n      } else {\r\n        toast.error(\"Không tìm thấy văn bằng để cập nhật.\");\r\n      }\r\n    }\r\n    handleReset();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (isUpdated) {\r\n      handleUpdateCertificate();\r\n    } else {\r\n      handleAddCertificate();\r\n    }\r\n  };\r\n\r\n  // Xóa chứng chỉ\r\n  const handleOpenDeleteDialog = () => {\r\n    setShowDeleteDialog(true);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n  };\r\n  const handleDelete = (item) => {\r\n    if (item?.id) {\r\n      setCertificateId(item?.id);\r\n    } else {\r\n      setCertificateId(item.tableData?.id);\r\n    }\r\n    handleOpenDeleteDialog();\r\n  };\r\n  const handleDeleteCertificate = () => {\r\n    if (employee?.id) {\r\n      dispatch(deleteCertificate(certificateId));\r\n    } else {\r\n      setCertificate(\r\n        certificate.filter((item) => item?.tableData?.id !== certificateId)\r\n      );\r\n      toast.success(\"Xóa chứng chỉ thành công!\");\r\n    }\r\n    handleReset();\r\n    handleCloseDeleteDialog();\r\n  };\r\n  const handleViewCertificate = (item) => {\r\n    setCertificateData({\r\n      ...item,\r\n      issueDate: moment(item?.issueDate).format(\"YYYY-MM-DD\"),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <ValidatorForm className=\"mb-20\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"certificateName\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Tên văn bằng\r\n                </span>\r\n              }\r\n              value={certificateData?.certificateName || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:50\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập tên văn bằng\",\r\n                \"Tên văn bằng không quá 50 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập tên văn bằng\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"issueDate\"\r\n              type=\"date\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Ngày cấp\r\n                </span>\r\n              }\r\n              value={certificateData?.issueDate || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"Vui lòng chọn ngày cấp\"]}\r\n              placeholder=\"Chọn ngày cấp\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"field\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Xếp loại\r\n                </span>\r\n              }\r\n              value={certificateData?.field || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:30\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập xếp loại\",\r\n                \"Xêp loại không quá 30 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập xếp loại\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={10} md={10} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"content\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Nội dung\r\n                </span>\r\n              }\r\n              value={certificateData?.content || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:200\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập nội dung\",\r\n                \"Nội dung không quá 200 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập nội dung\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className=\"mr-8\"\r\n              disabled={isViewMode}\r\n            >\r\n              Lưu\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleReset}>\r\n              Hủy\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ValidatorForm>\r\n      <MaterialTableComponent\r\n        columns={columns}\r\n        data={employee?.id ? certificateReducer : certificate}\r\n        height={\"300px\"}\r\n      />\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDeleteCertificate}\r\n          title={\"Xóa chứng chỉ\"}\r\n          text={`Bạn có muốn xóa Chứng chỉ không?`}\r\n          Yes={t(\"general.delete\")}\r\n          No={t(\"general.cancel\")}\r\n        ></ConfirmationDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCertificateForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  IconButton,\r\n  Grid,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment/moment\";\r\nimport { GENDER, RELATIONSHIP } from \"app/Constants/ListSelectItem\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n  ValidatorForm,\r\n} from \"react-material-ui-form-validator\";\r\nimport \"../../../Validate/Validate\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ConfirmationDialog from \"egret/components/ConfirmationDialog\";\r\nimport {\r\n  addFamily,\r\n  deleteFamily,\r\n  getFamilyByIdRequest,\r\n  updateFamily,\r\n} from \"app/redux/actions/FamilyAction\";\r\nimport MaterialTableComponent from \"app/views/Component/MaterialTableComponent/MaterialTableComponent\";\r\n\r\nconst FamilyRelationshipForm = ({\r\n  employee,\r\n  family,\r\n  setFamily,\r\n  isViewMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const familyReducer = useSelector((state) => state.family.listFamily);\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [familyId, setFamilyId] = useState(\"\");\r\n  const [familyFormData, setFamilyFormData] = useState({\r\n    name: \"\",\r\n    gender: \"\",\r\n    dateOfBirth: \"\",\r\n    relationShip: \"\",\r\n    citizenIdentificationNumber: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (employee?.id) {\r\n      dispatch(getFamilyByIdRequest(employee?.id));\r\n    }\r\n  }, [dispatch, employee]);\r\n  const handleChange = (e) => {\r\n    setFamilyFormData({\r\n      ...familyFormData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      render: (row) => row.tableData.id + 1,\r\n      width: \"5%\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"10%\",\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <div className=\"flex-icon\">\r\n            {isViewMode ? (\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  handleViewFamily(row);\r\n                }}\r\n              >\r\n                <Icon color=\"primary\">visibility</Icon>\r\n              </IconButton>\r\n            ) : (\r\n              <div>\r\n                <IconButton>\r\n                  <Icon\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      handleEdit(row);\r\n                    }}\r\n                  >\r\n                    edit\r\n                  </Icon>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                  <Icon\r\n                    color=\"error\"\r\n                    onClick={() => {\r\n                      handleDelete(row);\r\n                    }}\r\n                  >\r\n                    delete\r\n                  </Icon>\r\n                </IconButton>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"name\",\r\n      title: \"Tên thành viên\",\r\n      width: \"25%\",\r\n    },\r\n    {\r\n      field: \"gender\",\r\n      title: \"Giới tính\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n      render: (data) =>\r\n        GENDER.find((item) => item.id === data.gender.toString())?.name,\r\n    },\r\n    {\r\n      field: \"dateOfBirth\",\r\n      title: \"Ngày sinh\",\r\n      width: \"5%\",\r\n      render: (row) => moment(row.dateOfBirth).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      field: \"relationShip\",\r\n      title: \"Quan hệ\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n      render: (data) =>\r\n        RELATIONSHIP.find((item) => item.id === data.relationShip)?.name,\r\n    },\r\n    {\r\n      field: \"citizenIdentificationNumber\",\r\n      title: \"CCCD\",\r\n      width: \"5%\",\r\n    },\r\n    {\r\n      field: \"phoneNumber\",\r\n      title: \"SĐT\",\r\n      width: \"5%\",\r\n    },\r\n    {\r\n      field: \"address\",\r\n      title: \"Địa chỉ\",\r\n      width: \"35%\",\r\n    },\r\n  ];\r\n  const handleReset = () => {\r\n    setFamilyFormData({\r\n      name: \"\",\r\n      gender: \"\",\r\n      dateOfBirth: \"\",\r\n      relationShip: \"\",\r\n      citizenIdentificationNumber: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n    });\r\n    setIsUpdated(false);\r\n  };\r\n\r\n  const handleAddFamily = async () => {\r\n    const dataTemp = {\r\n      ...familyFormData,\r\n      employeeId: employee?.id,\r\n    };\r\n    if (employee?.id) {\r\n      dispatch(addFamily(employee?.id, [dataTemp]));\r\n    } else {\r\n      setFamily([...family, dataTemp]);\r\n      toast.success(\"Thêm thành công!\");\r\n    }\r\n    handleReset();\r\n  };\r\n\r\n  // Update\r\n  const handleEdit = (item) => {\r\n    setFamilyFormData({\r\n      ...item,\r\n      dateOfBirth: moment(item?.dateOfBirth).format(\"YYYY-MM-DD\"),\r\n    });\r\n    setIsUpdated(true);\r\n  };\r\n  const handleUpdateFamily = async () => {\r\n    const dataTemp = {\r\n      ...familyFormData,\r\n      employeeId: employee.id,\r\n    };\r\n    if (employee?.id) {\r\n      dispatch(updateFamily(dataTemp));\r\n    } else {\r\n      const updatedFamilyIndex = family.findIndex(\r\n        (item) => item?.tableData?.id === familyFormData?.tableData?.id\r\n      );\r\n      if (updatedFamilyIndex !== -1) {\r\n        const newListCertificate = [...family];\r\n        newListCertificate[updatedFamilyIndex] = dataTemp;\r\n        setFamily(newListCertificate);\r\n        toast.success(\"Cập nhật thành công!\");\r\n      } else {\r\n        toast.error(\"Không tìm thấy văn bằng để cập nhật.\");\r\n      }\r\n    }\r\n    handleReset();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (isUpdated) {\r\n      handleUpdateFamily();\r\n    } else {\r\n      handleAddFamily();\r\n    }\r\n  };\r\n\r\n  // Delete\r\n  const handleOpenDeleteDialog = () => {\r\n    setShowDeleteDialog(true);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n  };\r\n  const handleDelete = (item) => {\r\n    if (item?.id) {\r\n      setFamilyId(item?.id);\r\n    } else {\r\n      setFamilyId(item.tableData?.id);\r\n    }\r\n    handleOpenDeleteDialog();\r\n  };\r\n\r\n  const handleDeleteFamily = async () => {\r\n    if (employee?.id) {\r\n      dispatch(deleteFamily(familyId));\r\n    } else {\r\n      setFamily(family.filter((item) => item?.tableData?.id !== familyId));\r\n      toast.success(\"Xóa thành viên thành công!\");\r\n    }\r\n    handleCloseDeleteDialog();\r\n    handleReset();\r\n  };\r\n  const handleViewFamily = (item) => {\r\n    setFamilyFormData({\r\n      ...item,\r\n      dateOfBirth: moment(item?.dateOfBirth).format(\"YYYY-MM-DD\"),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <ValidatorForm className=\"mb-20\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"name\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Tên thành viên\r\n                </span>\r\n              }\r\n              value={familyFormData?.name || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\r\n                \"required\",\r\n                'matchRegexp:^[^0-9!@#$%^&*(),.?\":{}|<>]+$',\r\n                \"maxStringLength:30\",\r\n              ]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập tên thành viên\",\r\n                \"Tên không chứa kí tự đặc biệt\",\r\n                \"Tên không quá 30 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập tên thành viên\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <FormControl fullWidth>\r\n              <SelectValidator\r\n                name=\"gender\"\r\n                value={\r\n                  GENDER.find(\r\n                    (item) => item.id === familyFormData?.gender?.toString()\r\n                  )?.id || \"\"\r\n                }\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    Giới tính\r\n                  </span>\r\n                }\r\n                onChange={handleChange}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"Vui lòng chọn giới tính\"]}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                disabled={isViewMode}\r\n              >\r\n                {GENDER.map((i) => (\r\n                  <MenuItem value={i.id} key={i.id}>\r\n                    {i.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </SelectValidator>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"dateOfBirth\"\r\n              type=\"date\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Ngày sinh\r\n                </span>\r\n              }\r\n              value={familyFormData?.dateOfBirth || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"Vui lòng nhập ngày sinh\"]}\r\n              placeholder=\"Nhập ngày sinh\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n                inputProps: {\r\n                  max: moment().format(\"YYYY-MM-DD\"),\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <FormControl fullWidth>\r\n              <SelectValidator\r\n                name=\"relationShip\"\r\n                value={familyFormData?.relationShip || \"\"}\r\n                label={\r\n                  <span>\r\n                    <span className=\"red-color\"> * </span>\r\n                    Quan hệ\r\n                  </span>\r\n                }\r\n                onChange={handleChange}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"Vui lòng chọn quan hệ\"]}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                disabled={isViewMode}\r\n              >\r\n                {RELATIONSHIP.map((i) => (\r\n                  <MenuItem value={i.id} key={i.id}>\r\n                    {i.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </SelectValidator>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"citizenIdentificationNumber\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Căn cước công dân\r\n                </span>\r\n              }\r\n              value={familyFormData?.citizenIdentificationNumber || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"isNumber\", \"matchRegexp:^\\\\d{12}$\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập căn cước công dân\",\r\n                \"Căn cước công dân phải là số\",\r\n                \"Căn cước công dân phải 12 số\",\r\n              ]}\r\n              placeholder=\"Nhập CCCD\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"phoneNumber\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Sô điện thoại\r\n                </span>\r\n              }\r\n              value={familyFormData?.phoneNumber || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\r\n                \"required\",\r\n                \"isNumber\",\r\n                \"matchRegexp:^([0]{1}[0-9]{9})?$\",\r\n              ]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập số điện thoại\",\r\n                \"Số điện thoại phải là số\",\r\n                \"Số điện thoại không hợp lệ\",\r\n              ]}\r\n              placeholder=\"Nhập số điện thoại\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"email\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Email\r\n                </span>\r\n              }\r\n              value={familyFormData?.email || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"isEmail\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập email\",\r\n                \"Email không đúng định dạng\",\r\n              ]}\r\n              placeholder=\"Nhập email\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            <TextValidator\r\n              name=\"address\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Địa chỉ\r\n                </span>\r\n              }\r\n              value={familyFormData?.address || \"\"}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:60\"]}\r\n              errorMessages={[\"Vui lòng địa chỉ\", \"Địa chỉ không quá 60 ký tự\"]}\r\n              placeholder=\"Nhập địa chỉ\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: isViewMode,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={2} md={2} sm={12} xs={12}>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disabled={isViewMode}\r\n            >\r\n              Lưu\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className=\"ml-8\"\r\n              onClick={handleReset}\r\n            >\r\n              Hủy\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ValidatorForm>\r\n      <MaterialTableComponent\r\n        columns={columns}\r\n        data={employee?.id ? familyReducer : family}\r\n        height={\"300px\"}\r\n      />\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDeleteFamily}\r\n          title={\"Xóa thành viên\"}\r\n          text={`Bạn có muốn xóa thành viên không?`}\r\n          Yes={t(\"general.delete\")}\r\n          No={t(\"general.cancel\")}\r\n        ></ConfirmationDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FamilyRelationshipForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"../../../styles/views/_pending.scss\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Tab, Tabs } from \"@mui/material\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport EmployeeForm from \"./TabPanelForm/EmployeeForm\";\r\nimport AddCertificateForm from \"./TabPanelForm/AddCertificateForm\";\r\nimport FamilyRelationshipForm from \"./TabPanelForm/FamilyRelationshipForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addEmployees,\r\n  updateEmployees,\r\n} from \"app/redux/actions/EmployeeActions\";\r\nimport RegisterEmployee from \"../RegisterEmployees/RegisterEmployee\";\r\nimport { STATUS_OF_EMPLOYEE } from \"app/Constants/ListStatus\";\r\nimport { toast } from \"react-toastify\";\r\nimport { countObjectKeys } from \"utils\";\r\nimport { TAB_EMPLOYEE } from \"app/Constants/ListTab\";\r\nimport { TOTAL_OBJECTS_KEY_EMPLOYEE } from \"app/Constants/ListSelectItem\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst EmployeeDialog = ({\r\n  open,\r\n  onClose,\r\n  employee,\r\n  setEmployee,\r\n  certificate,\r\n  setCertificate,\r\n  family,\r\n  setFamily,\r\n  isViewMode,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [value, setValue] = useState(0);\r\n  const [openRegisterDialog, setOpenRegisterDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if (!checkEmployees() && newValue !== 0) {\r\n      toast.warning(\"Nhập đầy đủ thông tin nhân viên\");\r\n      return;\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setCertificate([]);\r\n    onClose();\r\n  };\r\n  // Employee logic\r\n  const handleInputChange = (e) => {\r\n    setEmployee({\r\n      ...employee,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const dataTemp = {\r\n      ...employee,\r\n      id: employee?.id || null,\r\n      certificatesDto: certificate,\r\n      employeeFamilyDtos: family,\r\n    };\r\n    if (employee?.id) {\r\n      dispatch(updateEmployees(dataTemp, STATUS_OF_EMPLOYEE));\r\n    } else {\r\n      dispatch(addEmployees(dataTemp));\r\n    }\r\n  };\r\n  const checkEmployees = () => {\r\n    const excludedKeys = [\r\n      \"id\",\r\n      \"image\",\r\n      \"certificatesDto\",\r\n      \"employeeFamilyDtos\",\r\n    ];\r\n    return (\r\n      countObjectKeys(employee, excludedKeys) >=\r\n        TOTAL_OBJECTS_KEY_EMPLOYEE.KEY &&\r\n      (value !== 0 || value === 0)\r\n    );\r\n  };\r\n\r\n  const handleOpenRegisterDialog = async () => {\r\n    const dataTemp = {\r\n      ...employee,\r\n    };\r\n    try {\r\n      await dispatch(updateEmployees(dataTemp, STATUS_OF_EMPLOYEE));\r\n      setOpenRegisterDialog(true);\r\n    } catch (error) {\r\n      toast.error(\"Cập nhật không thành công!\");\r\n    }\r\n  };\r\n  const handleCloseRegisterDialog = () => {\r\n    setOpenRegisterDialog(false);\r\n  };\r\n  const title = (employee?.id ? t(\"general.update\") : t(\"Add\")) + \" nhân viên\";\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"lg\"}\r\n        fullWidth={true}\r\n        className=\"no-scroll-dialog\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {isViewMode ? \"Xem thông tin nhân viên\" : title}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={handleClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          centered\r\n          variant=\"fullWidth\"\r\n          textColor=\"inherit\"\r\n        >\r\n          <Tab label={TAB_EMPLOYEE.NHAN_VIEN.LABEL} />\r\n          <Tab label={TAB_EMPLOYEE.CHUNG_CHI.LABEL} />\r\n          <Tab label={TAB_EMPLOYEE.GIA_DINH.LABEL} />\r\n        </Tabs>\r\n\r\n        {value === TAB_EMPLOYEE.CHUNG_CHI.KEY && (\r\n          <DialogContent dividers>\r\n            <AddCertificateForm\r\n              employee={employee}\r\n              certificate={certificate}\r\n              setCertificate={setCertificate}\r\n              isViewMode={isViewMode}\r\n            />\r\n          </DialogContent>\r\n        )}\r\n\r\n        {value === TAB_EMPLOYEE.GIA_DINH.KEY && (\r\n          <DialogContent dividers>\r\n            <FamilyRelationshipForm\r\n              employee={employee}\r\n              family={family}\r\n              setFamily={setFamily}\r\n              isViewMode={isViewMode}\r\n            />\r\n          </DialogContent>\r\n        )}\r\n\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          {value === TAB_EMPLOYEE.NHAN_VIEN.KEY && (\r\n            <DialogContent dividers>\r\n              <EmployeeForm\r\n                handleInputChange={handleInputChange}\r\n                employee={employee}\r\n                setEmployee={setEmployee}\r\n                isViewMode={isViewMode}\r\n              />\r\n            </DialogContent>\r\n          )}\r\n\r\n          <DialogActions\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle button-center\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disabled={isViewMode}\r\n            >\r\n              Lưu\r\n            </Button>\r\n            {employee?.id && (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleOpenRegisterDialog}\r\n                disabled={isViewMode}\r\n                color=\"primary\"\r\n              >\r\n                Đăng ký\r\n              </Button>\r\n            )}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Hủy\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n      {openRegisterDialog && (\r\n        <RegisterEmployee\r\n          open={openRegisterDialog}\r\n          employee={employee}\r\n          setEmployee={setEmployee}\r\n          handleCloseRegisterDialog={handleCloseRegisterDialog}\r\n          handleCloseEmployeeDialog={onClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport EmployeeDialog from \"./EmployeeDialog\";\r\nimport moment from \"moment/moment\";\r\nimport {\r\n  deleteEmployees,\r\n  getAllEmployeeRequest,\r\n} from \"app/redux/actions/EmployeeActions\";\r\nimport {\r\n  STATUSES,\r\n  STATUS_EMPLOYEE,\r\n  STATUS_OF_EMPLOYEE,\r\n} from \"app/Constants/ListStatus\";\r\nimport { GENDER, TEAM } from \"app/Constants/ListSelectItem\";\r\nimport ConfirmationDialog from \"egret/components/ConfirmationDialog\";\r\nimport \"../../../styles/views/_pending.scss\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport MaterialTableComponent from \"../Component/MaterialTableComponent/MaterialTableComponent\";\r\nimport PaginationComponent from \"../Component/PaginationComponent/PaginationComponent\";\r\nimport SearchComponent from \"../Component/SearchComponent/SearchComponent\";\r\nimport BreadcrumbComponent from \"../Component/BreadcrumbComponent/BreadcrumbComponent\";\r\nimport RegisterEmployee from \"../RegisterEmployees/RegisterEmployee\";\r\n\r\nconst useStyles = makeStyles({\r\n  customStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\nconst Employee = () => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [showDialogEmployee, setShowDialogEmployee] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [showViewDetails, setShowViewDetails] = useState(false);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n  const [employee, setEmployee] = useState({});\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const [certificate, setCertificate] = useState([]);\r\n  const [family, setFamily] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowPerPage, setRowPerPage] = useState(10);\r\n  const [isViewMode, setIsViewMode] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const employeesData = useSelector((state) => state.employees.employees);\r\n  const totalRecords = useSelector((state) => state.employees.totalElements);\r\n  const employeeReducer = useSelector((state) => state.employees.employee);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getAllEmployeeRequest({\r\n        status: STATUS_OF_EMPLOYEE,\r\n        page: page + 1,\r\n        rowPerPage: rowPerPage,\r\n        keyword: keywords,\r\n      })\r\n    );\r\n  }, [dispatch, page, rowPerPage, keywords]);\r\n\r\n  useEffect(() => {\r\n    setEmployee(employeeReducer);\r\n  }, [employeeReducer]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"3%\",\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <div className=\"flex-icon\">\r\n            {+row?.submitProfileStatus === STATUS_EMPLOYEE.CHO_DUYET.CODE && (\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  handleViewEmployee(row);\r\n                }}\r\n              >\r\n                <Icon color=\"primary\">visibility</Icon>\r\n              </IconButton>\r\n            )}\r\n            {(+row?.submitProfileStatus === STATUS_EMPLOYEE.LUU_MOI.CODE ||\r\n              +row?.submitProfileStatus ===\r\n                STATUS_EMPLOYEE.YEU_CAU_BO_SUNG.CODE ||\r\n              +row?.submitProfileStatus ===\r\n                STATUS_EMPLOYEE.DA_TU_CHOI.CODE) && (\r\n              <IconButton size=\"small\" onClick={() => handleEdit(row)}>\r\n                <Icon color=\"primary\">edit</Icon>\r\n              </IconButton>\r\n            )}\r\n\r\n            {+row?.submitProfileStatus === STATUS_EMPLOYEE.LUU_MOI.CODE && (\r\n              <IconButton size=\"small\" onClick={() => handleDelete(row.id)}>\r\n                <Icon color=\"error\">delete</Icon>\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"image\",\r\n      title: \"Hình ảnh\",\r\n      width: \"2%\",\r\n      render: (row) => (\r\n        <div className=\"center-avatar\">\r\n          <Avatar alt=\"#\" src={row?.image} className=\"mt-4 mb-4 \"></Avatar>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: \"name\",\r\n      title: \"Họ tên\",\r\n      width: \"12%\",\r\n      render: (data) => <span className=\"address-column\">{data.name}</span>,\r\n    },\r\n    {\r\n      field: \"dateOfBirth\",\r\n      title: \"Ngày sinh\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n      render: (row) => moment(row.dateOfBirth).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      field: \"gender\",\r\n      title: \"Giới tính\",\r\n      align: \"center\",\r\n      width: \"10px\",\r\n      render: (data) =>\r\n        GENDER.find((item) => item.id === data.gender.toString())?.name,\r\n    },\r\n    {\r\n      field: \"phone\",\r\n      title: \"Số điện thoại\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"team\",\r\n      title: \"Nhóm\",\r\n      width: \"5%\",\r\n      align: \"center\",\r\n      render: (data) => TEAM.find((item) => item.id === data.team)?.name,\r\n    },\r\n    {\r\n      field: \"address\",\r\n      title: \"Địa chỉ\",\r\n      width: \"15%\",\r\n      render: (data) => <span className=\"address-column\">{data.address}</span>,\r\n    },\r\n    {\r\n      field: \"submitProfileStatus\",\r\n      title: \"Trạng thái\",\r\n      width: \"5%\",\r\n      render: (data) =>\r\n        STATUSES.find((item) => item.id === Number(data.submitProfileStatus))\r\n          ?.name,\r\n    },\r\n  ];\r\n  //Show dialog\r\n  const handleOpenDialogEmloyee = () => {\r\n    setShowDialogEmployee(true);\r\n  };\r\n  const handleCloseDialogEmployee = () => {\r\n    setShowDialogEmployee(false);\r\n  };\r\n  // Thêm nhân viên\r\n  const handleAdd = () => {\r\n    setIsViewMode(false);\r\n    setEmployee({});\r\n    setCertificate([]);\r\n    setFamily([]);\r\n    handleOpenDialogEmloyee();\r\n  };\r\n  // Xóa nhân viên\r\n  const handleOpenDeleteDialog = () => {\r\n    setShowDeleteDialog(true);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n  };\r\n  const handleDelete = (id) => {\r\n    setEmployeeId(id);\r\n    handleOpenDeleteDialog();\r\n  };\r\n  const handleDialogDelete = () => {\r\n    dispatch(deleteEmployees(employeeId));\r\n    handleCloseDeleteDialog();\r\n  };\r\n  // Sửa nhân viên\r\n  const handleEdit = (item) => {\r\n    handleOpenDialogEmloyee();\r\n    setEmployee(item);\r\n    setIsViewMode(false);\r\n  };\r\n  // Xem nhân viên\r\n  const handleShowViewEmployee = () => {\r\n    setShowViewDetails(true);\r\n  };\r\n  const handleCloseViewEmployee = () => {\r\n    setShowViewDetails(false);\r\n  };\r\n  const handleViewEmployee = (rowData) => {\r\n    handleShowViewEmployee();\r\n    setEmployee(rowData);\r\n    setIsViewMode(true);\r\n  };\r\n  return (\r\n    <div className=\"m-sm-30\">\r\n      <BreadcrumbComponent\r\n        manage={t(\"Dashboard.manage\")}\r\n        title={t(\"staff.title\")}\r\n      />\r\n      <div className={classes.customStyle}>\r\n        <div>\r\n          <Button\r\n            className=\"mt-20 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              handleAdd();\r\n            }}\r\n          >\r\n            {t(\"Add\")}\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchComponent keywords={keywords} setKeywords={setKeywords} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <MaterialTableComponent\r\n        columns={columns}\r\n        data={employeesData}\r\n        height={\"558px\"}\r\n      />\r\n      <PaginationComponent\r\n        totalRecords={totalRecords}\r\n        page={page}\r\n        setPage={setPage}\r\n        rowPerPage={rowPerPage}\r\n        setRowPerPage={setRowPerPage}\r\n      />\r\n      {showDialogEmployee && (\r\n        <EmployeeDialog\r\n          open={showDialogEmployee}\r\n          onClose={handleCloseDialogEmployee}\r\n          employee={employee}\r\n          setEmployee={setEmployee}\r\n          certificate={certificate}\r\n          setCertificate={setCertificate}\r\n          family={family}\r\n          setFamily={setFamily}\r\n          isViewMode={isViewMode}\r\n        />\r\n      )}\r\n      {showViewDetails && (\r\n        <RegisterEmployee\r\n          open={showViewDetails}\r\n          handleCloseRegisterDialog={handleCloseViewEmployee}\r\n          employee={employee}\r\n          isViewMode={isViewMode}\r\n        />\r\n      )}\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDialogDelete}\r\n          title={\"Xóa nhân viên\"}\r\n          text={`Bạn có muốn xóa ${t(\"staff.title\")} không?`}\r\n          Yes={t(\"general.delete\")}\r\n          No={t(\"general.cancel\")}\r\n        ></ConfirmationDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","import * as React from \"react\";\r\nimport { Button, Dialog, DialogActions,Grid } from \"@material-ui/core\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ConfirmDialog = ({ open, onClose, handleDialogConfirm, title }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Dialog maxWidth=\"xs\" fullWidth={true} open={open} onClose={onClose}>\r\n      <div className=\"pt-24 px-20 pb-8\">\r\n        <h4 className=\"capitalize\">{t(\"general.confirm\")}</h4>\r\n        <p>{title + \" ?\"}</p>\r\n        <DialogActions>\r\n        <Grid container className=\"button-center\">\r\n            <Button\r\n              onClick={handleDialogConfirm}\r\n              className={\"mr-16\"}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {t(\"general.confirm\")}\r\n            </Button>\r\n            <Button onClick={onClose} variant=\"contained\" color=\"secondary\">\r\n              {t(\"general.cancel\")}\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport moment from \"moment\";\r\n\r\nValidatorForm.addValidationRule(\"isAfterOrEqualToToday\", (value) => {\r\n  if (!value) {\r\n    return true;\r\n  }\r\n  const selectedDate = new Date(value);\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  return selectedDate >= today;\r\n});\r\n\r\nValidatorForm.addValidationRule(\"equalEighteenYearsAgo\", (value) => {\r\n  if (!value) {\r\n    return true;\r\n  }\r\n  const currentDate = moment();\r\n  const eighteenYearsAgo = currentDate.subtract(18, \"years\");\r\n  const selectedDate = moment(value, \"YYYY-MM-DD\");\r\n  return selectedDate.isSameOrBefore(eighteenYearsAgo, \"day\");\r\n});\r\n\r\n\r\nexport function isAfterOrEqualToToday(inputDate) {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const input = new Date(inputDate);\r\n  return input.getTime() >= today.getTime();\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport moment from \"moment\";\r\nimport ConfirmDialog from \"../Component/Dialog/ConfirmDialog\";\r\nimport {\r\n  STATUS_EMPLOYEE,STATUS_OF_END_EMPLOYEE\r\n} from \"app/Constants/ListStatus\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateEmployees } from \"app/redux/actions/EmployeeActions\";\r\n\r\nconst SubMissionDialog = ({\r\n  open,\r\n  handleCloseSubMissionDialog,\r\n  employee,\r\n  handleCloseRegisterDialog,\r\n}) => {\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [decisionInput, setDecisionInput] = useState({\r\n    numberSaved: \"\",\r\n    decisionDay: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const title = \"Bạn có chắc muốn nộp lưu\";\r\n\r\n  ValidatorForm.addValidationRule(`matchDecisionCode`, (value) => {\r\n    const regexPattern = employee?.code\r\n      ? new RegExp(`^NL${moment().format(\"MMYY\")}${employee.code.slice(-3)}`)\r\n      : null;\r\n\r\n    if (regexPattern && value) {\r\n      return regexPattern.test(value);\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    setDecisionInput({\r\n      ...decisionInput,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDecisionSubmit = () => {\r\n    const dataTemp = {\r\n      ...employee,\r\n      numberSaved: decisionInput?.numberSaved,\r\n      decisionDay: decisionInput?.decisionDay,\r\n      submitProfileStatus: STATUS_EMPLOYEE.DA_NOP_LUU.CODE,\r\n    };\r\n    dispatch(updateEmployees(dataTemp, STATUS_OF_END_EMPLOYEE));\r\n    closeConfirmDialog();\r\n    handleCloseRegisterDialog();\r\n  };\r\n\r\n  const handleConfirmation = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n  const closeConfirmDialog = () => {\r\n    setOpenConfirmDialog(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseSubMissionDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Nộp lưu hồ sơ</DialogTitle>\r\n        <ValidatorForm onSubmit={handleConfirmation}>\r\n          <DialogContent className=\"no-scroll-dialog\">\r\n            <TextValidator\r\n              className=\"mb-16 bold-value-textfield\"\r\n              label=\"Ngày nộp lưu\"\r\n              type=\"date\"\r\n              name=\"decisionDay\"\r\n              value={decisionInput?.decisionDay}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              disabled\r\n            />\r\n            <TextValidator\r\n              label=\"Mã nộp lưu\"\r\n              name=\"numberSaved\"\r\n              value={decisionInput?.numberSaved}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              validators={[\"required\", \"matchDecisionCode\"]}\r\n              errorMessages={[\r\n                \"Mã nộp lưu không được bỏ trống\",\r\n                \"Mã nộp lưu không hợp lệ. Gợi ý: NL + Tháng hiện tại + Năm hiện tại + 3 số cuối Mã NV\",\r\n              ]}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions className=\"mt-12\">\r\n            <Button\r\n              className=\"mr-12 \"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              Xác nhận\r\n            </Button>\r\n            <Button\r\n              onClick={handleCloseSubMissionDialog}\r\n              variant=\"contained\"\r\n              className=\"mr-12\"\r\n              color=\"secondary\"\r\n            >\r\n              Hủy\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n        {openConfirmDialog && (\r\n          <ConfirmDialog\r\n            open={openConfirmDialog}\r\n            onClose={closeConfirmDialog}\r\n            handleDialogConfirm={handleDecisionSubmit}\r\n            title={title}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubMissionDialog;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { Tab, Tabs } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProfileForm from \"./TabPanelForm/ProfileForm\";\r\nimport \"../../../styles/views/_registerEmployee.scss\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport InformationForm from \"./TabPanelForm/InformationForm\";\r\nimport CertificateForm from \"./TabPanelForm/CertificateForm\";\r\nimport {\r\n  getEmployeeByIdRequest, updateEmployees,\r\n} from \"app/redux/actions/EmployeeActions\";\r\nimport SubmitLeaderDialog from \"./SubmitLeaderDialog\";\r\nimport {\r\n  STATUS_EMPLOYEE, STATUS_OF_EMPLOYEE,\r\n} from \"app/Constants/ListStatus\";\r\nimport SubMissionDialog from \"./SubMissionDialog\";\r\nimport moment from \"moment/moment\";\r\nimport { TAB_REGISTER } from \"app/Constants/ListTab\";\r\n\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 9,\r\n  },\r\n});\r\nconst RegisterEmployee = ({\r\n  open,\r\n  employee,\r\n  setEmployee,\r\n  handleCloseRegisterDialog,\r\n  handleCloseEmployeeDialog,\r\n  isViewMode,\r\n  decision,\r\n}) => {\r\n  const submitRef = useRef();\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [openSubmitLeaderDialog, setOpenSubmitLeaderDialog] = useState(false);\r\n  const [openSubMissionDialog, setOpenSubMissionDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const employeeDetail = useSelector((state) => state.employees.employee);\r\n  useEffect(() => {\r\n    if (employee?.id) {\r\n      dispatch(getEmployeeByIdRequest(employee?.id));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleOpenSubmitLeaderDialog = () => {\r\n    const dataTemp = {\r\n      ...employee,\r\n      knowledge: employee?.knowledge?.trim(),\r\n      skill: employee?.skill?.trim(),\r\n      activity: employee?.activity?.trim(),\r\n    };\r\n    dispatch(updateEmployees(dataTemp, STATUS_OF_EMPLOYEE));\r\n    setOpenSubmitLeaderDialog(true);\r\n  };\r\n  const handleCloseSubmitLeaderDialog = () => {\r\n    setOpenSubmitLeaderDialog(false);\r\n  };\r\n\r\n  const handleOpenSubMissionDialog = () => {\r\n    setOpenSubMissionDialog(true);\r\n  };\r\n  const handleCloseSubMissionDialog = () => {\r\n    setOpenSubMissionDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseRegisterDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"lg\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" className=\"custom-dialog-title\">\r\n          <div className=\"title-custom-tab\">\r\n            <span className=\"styleColor\">Thông tin hồ sơ nhân viên</span>\r\n            {employee?.numberSaved ? (\r\n              <span className=\"mr-40 decision-text\">\r\n                Số lưu: {employee?.numberSaved} - Ngày lưu:{\" \"}\r\n                {moment(employee?.decisionDay).format(\"DD/MM/YYYY\")}{\" \"}\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={handleCloseRegisterDialog} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Paper className=\"dialog-content-custom\">\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", height: 700 }}>\r\n            <Tabs\r\n              orientation=\"vertical\"\r\n              variant=\"scrollable\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"Vertical tabs example\"\r\n              sx={{ borderRight: 1, borderColor: \"divider\" }}\r\n              className=\"custom-tab\"\r\n            >\r\n              <Tab label={TAB_REGISTER.HO_SO.LABEL} className=\"tab-label\" />\r\n              <Tab label={TAB_REGISTER.SO_YEU_LY_LICH.LABEL} className=\"tab-label\" />\r\n              <Tab label={TAB_REGISTER.VAN_BANG.LABEL} className=\"tab-label\" />\r\n            </Tabs>\r\n            {value === TAB_REGISTER.HO_SO.KEY && (\r\n              <DialogContent dividers className=\"tab-content\">\r\n                <ValidatorForm>\r\n                  <ProfileForm\r\n                    employee={employee}\r\n                    setEmployee={setEmployee}\r\n                    submitRef={submitRef}\r\n                    isViewMode={isViewMode}\r\n                  />\r\n                </ValidatorForm>\r\n              </DialogContent>\r\n            )}\r\n            {value === TAB_REGISTER.SO_YEU_LY_LICH.KEY && (\r\n              <DialogContent dividers className=\"tab-content\">\r\n                <InformationForm employeeDetail={employeeDetail} />\r\n              </DialogContent>\r\n            )}\r\n            {value === TAB_REGISTER.VAN_BANG.KEY && (\r\n              <DialogContent dividers className=\"tab-content\">\r\n                <CertificateForm employeeDetail={employeeDetail} />\r\n              </DialogContent>\r\n            )}\r\n          </Box>\r\n        </Paper>\r\n        <DialogActions\r\n          spacing={4}\r\n          className=\"flex flex-end flex-middle button-center-register\"\r\n        >\r\n          {Number(employee?.submitProfileStatus) === STATUS_EMPLOYEE.DA_KET_THUC.CODE &&\r\n            decision && (\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleOpenSubMissionDialog}\r\n              >\r\n                Nộp lưu\r\n              </Button>\r\n            )}\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => submitRef?.current?.click()}\r\n            className={isViewMode ? \"hidden\" : \"\"}\r\n          >\r\n            Lưu\r\n          </Button>\r\n          {(employee?.skill && employee?.activity) && (\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleOpenSubmitLeaderDialog}\r\n              className={isViewMode ? \"hidden\" : \"\"}\r\n            >\r\n              Trình lãnh đạo\r\n            </Button>\r\n          )}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleCloseRegisterDialog}\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {openSubmitLeaderDialog && (\r\n        <SubmitLeaderDialog\r\n          open={openSubmitLeaderDialog}\r\n          handleCloseSubmitLeaderDialog={handleCloseSubmitLeaderDialog}\r\n          employee={employee}\r\n          setEmployee={setEmployee}\r\n          handleCloseRegisterDialog={handleCloseRegisterDialog}\r\n          handleCloseEmployeeDialog={handleCloseEmployeeDialog}\r\n        />\r\n      )}\r\n      {openSubMissionDialog && (\r\n        <SubMissionDialog\r\n          open={openSubMissionDialog}\r\n          handleCloseSubMissionDialog={handleCloseSubMissionDialog}\r\n          employee={employee}\r\n          setEmployee={setEmployee}\r\n          handleCloseRegisterDialog={handleCloseRegisterDialog}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterEmployee;\r\n"],"sourceRoot":""}