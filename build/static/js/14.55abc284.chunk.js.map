{"version":3,"sources":["app/views/sessions/SignUp.jsx","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["SignUp","state","username","email","password","agreement","handleChange","event","persist","_this","setState","[object Object]","target","name","value","handleFormSubmit","_this2","this","_this$state","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","container","item","lg","md","sm","xs","src","alt","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_11__","ref","onSubmit","variant","label","onChange","type","validators","errorMessages","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","control","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","color","onClick","props","history","push","ConstantList","ROOT_PATH","Component","connect","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","clsx__WEBPACK_IMPORTED_MODULE_5__","_utils_useControlled__WEBPACK_IMPORTED_MODULE_6__","_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_8__","_IconButton__WEBPACK_IMPORTED_MODULE_9__","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","Object","_useControlled","controlled","default","Boolean","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","root","role","undefined","input","newChecked","__webpack_exports__","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_FormControl__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_Typography__WEBPACK_IMPORTED_MODULE_7__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__","FormControlLabel","_props$labelPlacement","labelPlacement","controlProps","forEach","key","concat","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","&$disabled","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","palette","text","CheckBoxOutlineBlank","createSvgIcon","react","d","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","objectWithoutProperties","esm_extends","clsx_m","capitalize","data-indeterminate","fontSize","withStyles","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","colorSecondary"],"mappings":"qOAYMA,8MACJC,MAAQ,CACNC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,UAAW,MAGbC,aAAe,SAAAC,GACbA,EAAMC,UACNC,EAAKC,SAAS,CACZC,CAACJ,EAAMK,OAAOC,MAAON,EAAMK,OAAOE,WAItCC,iBAAmB,SAAAR,iDACnB,WAAS,IAAAS,EAAAC,KAAAC,EAC6BD,KAAKhB,MAAnCC,EADCgB,EACDhB,SAAUC,EADTe,EACSf,MAAOC,EADhBc,EACgBd,SACvB,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,0CACdH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,WAAS,GACbN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACbH,EAAAC,EAAAC,cAAA,OACEU,IAAI,iDACJC,IAAI,OAIVb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACY,EAAA,cAAD,CAAeC,IAAI,OAAOC,SAAUlB,KAAKF,kBACvCI,EAAAC,EAAAC,cAACY,EAAA,cAAD,CACEX,UAAU,cACVc,QAAQ,WACRC,MAAM,WACNC,SAAUrB,KAAKX,aACfiC,KAAK,OACL1B,KAAK,WACLC,MAAOZ,EACPsC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElBtB,EAAAC,EAAAC,cAACY,EAAA,cAAD,CACEX,UAAU,cACVc,QAAQ,WACRC,MAAM,QACNC,SAAUrB,KAAKX,aACfiC,KAAK,QACL1B,KAAK,QACLC,MAAOX,EACPqC,WAAY,CAAC,WAAY,WACzBC,cAAe,CACb,yBACA,wBAGJtB,EAAAC,EAAAC,cAACY,EAAA,cAAD,CACEX,UAAU,cACVe,MAAM,WACND,QAAQ,WACRE,SAAUrB,KAAKX,aACfO,KAAK,WACL0B,KAAK,WACLzB,MAAOV,EACPoC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElBtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEpB,UAAU,QACVT,KAAK,YACLyB,SAAUrB,KAAKX,aACfqC,QAASxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,MACTP,MAAM,mDAERlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,aACVc,QAAQ,YACRU,MAAM,UACNP,KAAK,UAJP,WAQApB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,MACAH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,aACVyB,QAAS,kBACP/B,EAAKgC,MAAMC,QAAQC,KAAKC,IAAaC,UAAU,oBAHnD,0BAvFDC,aA+GNC,sBAJS,SAAArD,GAAK,MAAK,IAMhC,GAFaqD,CAGbtD,qCC9HF,IAAAuD,EAAAC,EAAA,GAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,IAAAG,EAAAH,EAAA,GAAAI,GAAAJ,EAAA,GAAAA,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAkCAS,EAA8BN,EAAA,WAAgB,SAAAX,EAAAd,GAC9C,IAAAgC,EAAAlB,EAAAkB,UACAC,EAAAnB,EAAAoB,QACAC,EAAArB,EAAAqB,YACAC,EAAAtB,EAAAsB,QACAhD,EAAA0B,EAAA1B,UACAiD,EAAAvB,EAAAuB,eACAC,EAAAxB,EAAAyB,SACAC,EAAA1B,EAAA0B,KACAC,EAAA3B,EAAA2B,GACAC,EAAA5B,EAAA4B,WACAC,EAAA7B,EAAA6B,SACAhE,EAAAmC,EAAAnC,KACAiE,EAAA9B,EAAA8B,OACAxC,EAAAU,EAAAV,SACAyC,EAAA/B,EAAA+B,QACAC,EAAAhC,EAAAgC,SACAC,EAAAjC,EAAAiC,SACAC,EAAAlC,EAAAkC,SACA3C,EAAAS,EAAAT,KACAzB,EAAAkC,EAAAlC,MACAqE,EAAcC,OAAA1B,EAAA,EAAA0B,CAAwBpC,EAAA,kNAEtCqC,EAAuBD,OAAAvB,EAAA,EAAAuB,CAAa,CACpCE,WAAAnB,EACAoB,QAAAC,QAAAjB,GACA1D,KAAA,aACAZ,MAAA,YAEAwF,EAAwBL,OAAA3B,EAAA,EAAA2B,CAAcC,EAAA,GACtCjB,EAAAqB,EAAA,GACAC,EAAAD,EAAA,GAEAE,EAAuBP,OAAAtB,EAAA,EAAAsB,GAgCvBX,EAAAD,EAEAmB,GACA,qBAAAlB,IACAA,EAAAkB,EAAAlB,UAIA,IAAAmB,EAAA,aAAArD,GAAA,UAAAA,EACA,OAAsBoB,EAAA,cAAoBK,EAAA,EAAYoB,OAAA7B,EAAA,EAAA6B,CAAQ,CAC9DS,UAAA,OACAvE,UAAe8D,OAAAxB,EAAA,EAAAwB,CAAId,EAAAwB,KAAAxE,EAAA8C,GAAAE,EAAAF,QAAAK,GAAAH,EAAAG,UACnBA,WACAS,SAAA,KACAa,UAAAC,EACAjB,QA7CA,SAAAxE,GACAwE,GACAA,EAAAxE,GAGAoF,KAAAZ,SACAY,EAAAZ,QAAAxE,IAwCAuE,OApCA,SAAAvE,GACAuE,GACAA,EAAAvE,GAGAoF,KAAAb,QACAa,EAAAb,OAAAvE,IA+BA2B,OACGiD,GAAuBxB,EAAA,cAAmB,QAAUyB,OAAA7B,EAAA,EAAA6B,CAAQ,CAC/DlB,YACAE,QAAAD,EACAI,iBACAjD,UAAAgD,EAAA2B,MACAxB,WACAE,GAAAiB,GAAAjB,EACA9D,OACAyB,SApCA,SAAA/B,GACA,IAAA2F,EAAA3F,EAAAK,OAAAwD,QACAsB,EAAAQ,GAEA5D,GAEAA,EAAA/B,EAAA2F,IA+BAlB,WACA9C,IAAA2C,EACAI,WACAC,WACA3C,OACAzB,SACG8D,IAAAR,EAAAC,EAAAK,KA8GYyB,EAAA,EAAAf,OAAArB,EAAA,EAAAqB,CAvOR,CACPU,KAAA,CACAM,QAAA,GAEAhC,QAAA,GACAK,SAAA,GACAwB,MAAA,CACAI,OAAA,UACAC,SAAA,WACAC,QAAA,EACAC,MAAA,OACAC,OAAA,OACAC,IAAA,EACAC,KAAA,EACAC,OAAA,EACAR,QAAA,EACAS,OAAA,IAuNyB,CACzBhG,KAAA,qBADe,CAEdoD,qCCpPD,IAAAV,EAAAC,EAAA,GAAAsD,EAAAtD,EAAA,IAAAuD,EAAAvD,EAAA,GAAAwD,GAAAxD,EAAA,GAAAA,EAAA,KAAAyD,EAAAzD,EAAA,KAAA0D,EAAA1D,EAAA,IAAA2D,EAAA3D,EAAA,KAAA4D,EAAA5D,EAAA,IAgEA6D,EAAoCN,EAAA,WAAgB,SAAA/D,EAAAd,GACpDc,EAAAoB,QAAA,IACAE,EAAAtB,EAAAsB,QACAhD,EAAA0B,EAAA1B,UACAqB,EAAAK,EAAAL,QACA6B,EAAAxB,EAAAyB,SAEApC,GADAW,EAAA6B,SACA7B,EAAAX,OACAiF,EAAAtE,EAAAuE,eACAA,OAAA,IAAAD,EAAA,MAAAA,EAIAnC,GAHAnC,EAAAnC,KACAmC,EAAAV,SACAU,EAAAlC,MACcsE,OAAA0B,EAAA,EAAA1B,CAAwBpC,EAAA,uHAEtC2C,EAAuBP,OAAA6B,EAAA,EAAA7B,GACvBX,EAAAD,EAEA,qBAAAC,GAAA,qBAAA9B,EAAAK,MAAAyB,WACAA,EAAA9B,EAAAK,MAAAyB,UAGA,qBAAAA,GAAAkB,IACAlB,EAAAkB,EAAAlB,UAGA,IAAA+C,EAAA,CACA/C,YAOA,MALA,iDAAAgD,QAAA,SAAAC,GACA,qBAAA/E,EAAAK,MAAA0E,IAAA,qBAAA1E,EAAA0E,KACAF,EAAAE,GAAA1E,EAAA0E,MAGsBX,EAAA,cAAmB,QAAU3B,OAAA7B,EAAA,EAAA6B,CAAQ,CAC3D9D,UAAe8D,OAAA4B,EAAA,EAAA5B,CAAId,EAAAwB,KAAAxE,EAAA,QAAAiG,GAAAjD,EAAA,iBAAAqD,OAAsFvC,OAAAgC,EAAA,EAAAhC,CAAUmC,KAAA9C,GAAAH,EAAAG,UACnHvC,OACGiD,GAAuB4B,EAAA,aAAkBpE,EAAA6E,GAAsCT,EAAA,cAAoBI,EAAA,EAAU,CAChHtB,UAAA,OACAvE,UAAe8D,OAAA4B,EAAA,EAAA5B,CAAId,EAAAjC,MAAAoC,GAAAH,EAAAG,WAChBpC,MAmEY8D,EAAA,EAAAf,OAAA8B,EAAA,EAAA9B,CAjKR,SAAAwC,GACP,OAEA9B,KAAA,CACA+B,QAAA,cACAC,WAAA,SACAzB,OAAA,UAEA0B,cAAA,SACAC,wBAAA,cACAC,YAAA,GACAC,YAAA,GAEAC,aAAA,CACA9B,OAAA,YAKA+B,oBAAA,CACAC,cAAA,cACAJ,WAAA,GAEAC,aAAA,IAIAI,kBAAA,CACAD,cAAA,iBACAJ,WAAA,IAIAM,qBAAA,CACAF,cAAA,SACAJ,WAAA,IAIAxD,SAAA,GAGApC,MAAA,CACA8F,aAAA,CACArF,MAAA8E,EAAAY,QAAAC,KAAAhE,aAqHyB,CACzB5D,KAAA,uBADe,CAEdwG,gGCvKcqB,EAAAtD,OAAAuD,EAAA,GAA4BC,EAAA,cAAmB,QAC9DC,EAAA,+FACC,wBCFcC,EAAA1D,OAAAuD,EAAA,GAA4BC,EAAA,cAAmB,QAC9DC,EAAA,wIACC,oBCFcE,EAAA3D,OAAAuD,EAAA,GAA4BC,EAAA,cAAmB,QAC9DC,EAAA,kGACC,yCCwDDG,EAAsCJ,EAAA,cAAoBE,EAAY,MACtEG,EAA+BL,EAAA,cAAoBF,EAAwB,MAC3EQ,EAA4CN,EAAA,cAAoBG,EAAyB,MACrFI,EAAwBP,EAAA,WAAgB,SAAA5F,EAAAd,GAC5C,IAAAkH,EAAApG,EAAAqB,YACAA,OAAA,IAAA+E,EAAAJ,EAAAI,EACA9E,EAAAtB,EAAAsB,QACA+E,EAAArG,EAAAF,MACAA,OAAA,IAAAuG,EAAA,YAAAA,EACAC,EAAAtG,EAAA0B,KACA6E,OAAA,IAAAD,EAAAL,EAAAK,EACAE,EAAAxG,EAAAyG,cACAA,OAAA,IAAAD,KACAE,EAAA1G,EAAA2G,kBACAC,OAAA,IAAAF,EAAAR,EAAAQ,EACA9E,EAAA5B,EAAA4B,WACAiF,EAAA7G,EAAA8G,KACAA,OAAA,IAAAD,EAAA,SAAAA,EACA1E,EAAcC,OAAA2E,EAAA,EAAA3E,CAAwBpC,EAAA,kGAEtC0B,EAAA+E,EAAAG,EAAAL,EACAI,EAAAF,EAAAG,EAAAvF,EACA,OAAsBuE,EAAA,cAAoB3E,EAAA,EAAYmB,OAAA4E,EAAA,EAAA5E,CAAQ,CAC9D7C,KAAA,WACA+B,QAAA,CACAwB,KAAYV,OAAA6E,EAAA,EAAA7E,CAAId,EAAAwB,KAAAxB,EAAA,QAAAqD,OAAsCvC,OAAA8E,EAAA,EAAA9E,CAAUtC,KAAA2G,GAAAnF,EAAAmF,eAChErF,QAAAE,EAAAF,QACAK,SAAAH,EAAAG,UAEA3B,QACA8B,WAAgBQ,OAAA4E,EAAA,EAAA5E,CAAQ,CACxB+E,qBAAAV,GACK7E,GACLF,KAAuBkE,EAAA,aAAkBlE,EAAA,CACzC0F,cAAApE,IAAAtB,EAAA1B,MAAAoH,UAAA,UAAAN,IAAApF,EAAA1B,MAAAoH,WAEA/F,YAA8BuE,EAAA,aAAkBe,EAAA,CAChDS,cAAApE,IAAA2D,EAAA3G,MAAAoH,UAAA,UAAAN,IAAAH,EAAA3G,MAAAoH,WAEAlI,OACGiD,MAiGYgB,EAAA,EAAAf,OAAAiF,EAAA,EAAAjF,CA5LE,SAAAwC,GACjB,OAEA9B,KAAA,CACAhD,MAAA8E,EAAAY,QAAAC,KAAA6B,WAIAlG,QAAA,GAGAK,SAAA,GAGAgF,cAAA,GAGAc,aAAA,CACAC,YAAA,CACA1H,MAAA8E,EAAAY,QAAAiC,QAAAC,KACAC,UAAA,CACAC,gBAA2BxF,OAAAyF,EAAA,EAAAzF,CAAIwC,EAAAY,QAAAiC,QAAAC,KAAA9C,EAAAY,QAAAsC,OAAAC,cAE/BC,uBAAA,CACAJ,gBAAA,iBAIAzC,aAAA,CACArF,MAAA8E,EAAAY,QAAAsC,OAAArG,WAKAwG,eAAA,CACAT,YAAA,CACA1H,MAAA8E,EAAAY,QAAA8B,UAAAI,KACAC,UAAA,CACAC,gBAA2BxF,OAAAyF,EAAA,EAAAzF,CAAIwC,EAAAY,QAAA8B,UAAAI,KAAA9C,EAAAY,QAAAsC,OAAAC,cAE/BC,uBAAA,CACAJ,gBAAA,iBAIAzC,aAAA,CACArF,MAAA8E,EAAAY,QAAAsC,OAAArG,aA8IgC,CAChC5D,KAAA,eADe,CAEZsI","file":"static/js/14.55abc284.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Card,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    agreement: \"\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {};\r\n  render() {\r\n    let { username, email, password } = this.state;\r\n    return (\r\n      <div className=\"signup flex flex-center w-100 h-100vh\">\r\n        <div className=\"p-8\">\r\n          <Card className=\"signup-card position-relative y-center\">\r\n            <Grid container>\r\n              <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                <div className=\"p-32 flex flex-center bg-light-gray flex-middle h-100\">\r\n                  <img\r\n                    src=\"/assets/images/illustrations/posting_photo.svg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                <div className=\"p-36 h-100\">\r\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n                    <TextValidator\r\n                      className=\"mb-24 w-100\"\r\n                      variant=\"outlined\"\r\n                      label=\"Username\"\r\n                      onChange={this.handleChange}\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={username}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"this field is required\"]}\r\n                    />\r\n                    <TextValidator\r\n                      className=\"mb-24 w-100\"\r\n                      variant=\"outlined\"\r\n                      label=\"Email\"\r\n                      onChange={this.handleChange}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      validators={[\"required\", \"isEmail\"]}\r\n                      errorMessages={[\r\n                        \"this field is required\",\r\n                        \"email is not valid\"\r\n                      ]}\r\n                    />\r\n                    <TextValidator\r\n                      className=\"mb-16 w-100\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onChange={this.handleChange}\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      value={password}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"this field is required\"]}\r\n                    />\r\n                    <FormControlLabel\r\n                      className=\"mb-16\"\r\n                      name=\"agreement\"\r\n                      onChange={this.handleChange}\r\n                      control={<Checkbox />}\r\n                      label=\"I have read and agree to the terms of service.\"\r\n                    />\r\n                    <div className=\"flex flex-middle\">\r\n                      <Button\r\n                        className=\"capitalize\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                      <span className=\"ml-16 mr-8\">or</span>\r\n                      <Button\r\n                        className=\"capitalize\"\r\n                        onClick={() =>\r\n                          this.props.history.push(ConstantList.ROOT_PATH+\"session/signin\")\r\n                        }\r\n                      >\r\n                        Sign in\r\n                      </Button>\r\n                    </div>\r\n                  </ValidatorForm>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // setUser: PropTypes.func.isRequired\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(SignUp);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}