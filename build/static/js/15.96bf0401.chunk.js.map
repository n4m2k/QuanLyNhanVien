{"version":3,"sources":["app/EgretLayout/Layout1/Layout1Topbar.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/Layout1/Layout1Sidenav.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/Layout1/Layout1.jsx"],"names":["Layout1Topbar","state","updateSidebarMode","sidebarSettings","_this$props","_this","props","settings","setLayoutSettings","Object","objectSpread2","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","_this$props2","this","theme","topbarTheme","themes","topbar","react_default","a","createElement","ThemeProvider","className","style","backgroundColor","palette","primary","main","IconButton","onClick","Icon","Component","withStyles","root","withTheme","withRouter","connect","PropTypes","func","isRequired","logoutUser","layout","ViewEgretVerticalNav","withTranslation","EgretVerticalNav","_user$roles","user","useSelector","role","roles","id","console","log","react","lib_default","option","suppressScrollX","children","navigation","LocalStorageService","getLocalStorageItem","length","name","icon","path","ConstantList","ROOT_PATH","isVisible","getNavigation","activeLayoutSettingsName","activeLayout","activeLayoutSettings","[object Object]","Brand","react_router_dom","to","HOME_PAGE","SidenavTheme","_ref","Helmet","concat","type","text","secondary","bgImgURL","bgOpacity","IconButtonWhite","padding","IconSmall","fontSize","Layout1Sidenav","sidenavToggleChecked","hidden","setDefaultSettings","updatedSettings","handleSidenavToggle","setState","handleSignOut","renderLogoSwitch","SharedCompoents_Brand","Switch","onChange","checked","color","renderUser","t","imagePath","authService","getLoginUser","API_ENPOINT","src","alt","username","Tooltip","title","aria-label","size","_this2","unlistenRouteChange","history","listen","location","action","setTimeout","sidenavTheme","EgretTheme_SidenavTheme","SharedCompoents_Sidenav","footerTheme","footer","contrastText","href","Button","variant","ViewLayout1Sidenav","ViewLayout1Topbar","Layout1","classes","layoutClasses","topbar-fixed","fixed","appContext","Consumer","routes","classList","show","perfectScrollbar","Layout1_Layout1Topbar","renderRoutes","SharedCompoents_Footer","background","default"],"mappings":"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","file":"static/js/15.96bf0401.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  withStyles,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { isMdScreen } from \"utils\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n});\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = (sidebarSettings) => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n\r\n    const topbarTheme =\r\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <div className=\"topbar\">\r\n          <div\r\n            className={`topbar-hold`}\r\n            style={{ backgroundColor: topbarTheme.palette.primary.main }}\r\n          >\r\n            <div className=\"flex flex-space-between flex-middle h-100\">\r\n              <div className=\"flex\">\r\n                <IconButton onClick={this.handleSidebarToggle}>\r\n                  <Icon>menu</Icon>\r\n                </IconButton>\r\n                {/* <BreadCrumb /> */}\r\n                <div className=\"hide-on-mobile\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings,\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, { setLayoutSettings, logoutUser })(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { EgretVerticalNav } from \"egret\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport LocalStorageService from \"../../services/LocalStorageService\";\r\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\r\nfunction Sidenav(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const role = user?.roles?.[0].id !== 4;\r\n  console.log(role);\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let { settings, setLayoutSettings } = props;\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderOverlay = () => (\r\n    <div\r\n      onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n  const getNavigation = () => {\r\n    let navigation = LocalStorageService.getLocalStorageItem(\"navigations\");\r\n    if (navigation && navigation.length > 0) {\r\n      return navigation;\r\n    } else {\r\n      return [\r\n        {\r\n          name: \"Dashboard.dashboard\",\r\n          icon: \"engineering\",\r\n          path: ConstantList.ROOT_PATH + \"home\",\r\n          isVisible: true,\r\n        },\r\n\r\n        !role && {\r\n          name: \"Dashboard.manage\",\r\n          isVisible: true,\r\n          icon: \"engineering\",\r\n          children: [\r\n            {\r\n              name: \"Thêm mới nhân viên\",\r\n              isVisible: true,\r\n              path: ConstantList.ROOT_PATH + \"employees_add/employees\",\r\n              icon: \"keyboard_arrow_right\",\r\n            },\r\n            {\r\n              name: \"Quản lý nhân viên\",\r\n              isVisible: true,\r\n              path: ConstantList.ROOT_PATH + \"employees_manage/employees\",\r\n              icon: \"keyboard_arrow_right\",\r\n            },\r\n            {\r\n              name: \"Kết thúc\",\r\n              isVisible: true,\r\n              path: ConstantList.ROOT_PATH + \"end_employees/employees\",\r\n              icon: \"keyboard_arrow_right\",\r\n            },\r\n          ],\r\n        },\r\n\r\n        role && {\r\n          name: \"Dashboard.leader\",\r\n          isVisible: true,\r\n          icon: \"engineering\",\r\n          children: [\r\n            {\r\n              name: \"Leader.pending\",\r\n              isVisible: true,\r\n              path: ConstantList.ROOT_PATH + \"leader_pending\",\r\n              icon: \"keyboard_arrow_right\",\r\n            },\r\n            {\r\n              name: \"Leader.confirm\",\r\n              isVisible: true,\r\n              path: ConstantList.ROOT_PATH + \"leader_confirm\",\r\n              icon: \"keyboard_arrow_right\",\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar\r\n        option={{ suppressScrollX: true }}\r\n        className=\"scrollable position-relative\"\r\n      >\r\n        {props.children}\r\n        <ViewEgretVerticalNav navigation={getNavigation()} />\r\n      </Scrollbar>\r\n      {renderOverlay()}\r\n    </Fragment>\r\n  );\r\n}\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings,\r\n});\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n  })(Sidenav)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Brand extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-middle flex-space-between brand-area\">\r\n        {/* <div className=\"flex flex-middle brand\">       \r\n          <Link to={ConstantList.HOME_PAGE}>\r\n             <img src= {ConstantList.ROOT_PATH+ \"assets/images/logo-paster.png\"} alt=\"company-logo\" />         \r\n          </Link>\r\n          <span className=\"brand__text\">PASTEUR EQA</span>\r\n        </div> */}\r\n        <div className=\"flex flex-middle brand logo-menu\">\r\n          <Link to={ConstantList.HOME_PAGE}>\r\n            <span className=\"brand__text\">L3-T10</span>\r\n          </Link>\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SidenavTheme = ({ theme, settings }) => {\r\n\r\n  function darkHoverStyle() {\r\n    return theme.palette.type === \"dark\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active {\r\n          color: ${theme.palette.text.primary};\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  function lightHoverStyle() {\r\n    return theme.palette.type === \"light\"\r\n      ? `.navigation .nav-item:hover,\r\n        .navigation .nav-item.active,\r\n        .navigation .submenu {\r\n          background: rgba(0, 0, 0, .08);\r\n        }`\r\n      : \"\";\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <style>\r\n        {`\r\n        \r\n        ${\r\n          theme.palette.type === \"dark\"\r\n            ? `.sidenav {\r\n          color: ${theme.palette.text.secondary};\r\n        }`\r\n            : \" \"\r\n        }\r\n\r\n        .sidenav__hold {\r\n          background-image: url(${\r\n            settings.layout1Settings.leftSidebar.bgImgURL\r\n          });\r\n          opacity: 1 !important;\r\n        }\r\n        .sidenav__hold::after {\r\n          background: ${theme.palette.primary.main};\r\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\r\n        }\r\n\r\n        ${lightHoverStyle()}\r\n        ${darkHoverStyle()}\r\n        \r\n      `}\r\n      </style>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Icon,\r\n  withStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings,\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport authService from \"../../services/jwtAuthService\";\r\nconst styles = (theme) => ({});\r\n\r\nconst IconButtonWhite = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\",\r\n  },\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\",\r\n  },\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false,\r\n    hidden: true,\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = (sidebarSettings) => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = {\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    };\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let { sidenavToggleChecked } = this.state;\r\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\r\n    this.updateSidebarMode({ mode });\r\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle hide-on-mobile\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={this.state.sidenavToggleChecked}\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    const { t } = this.props;\r\n\r\n    let imagePath = ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\";\r\n\r\n    let user = authService.getLoginUser();\r\n    if (user != null && user.imagePath != null) {\r\n      imagePath = ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n\r\n    if (user != null && user.imagePath != null) {\r\n      imagePath = ConstantList.API_ENPOINT + user.imagePath;\r\n    }\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        <div className=\"username-photo\">\r\n          <img src={imagePath} alt=\"user\" />\r\n          <span className=\"username text-center\">\r\n            {user ? user.username : \"\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"user__menu\">\r\n          <Tooltip title={t(\"Dashboard.logout\")}>\r\n            <IconButtonWhite\r\n              aria-label=\"Delete\"\r\n              className=\"\"\r\n              size=\"small\"\r\n              onClick={this.handleSignOut}\r\n            >\r\n              <IconSmall>exit_to_app</IconSmall>\r\n            </IconButtonWhite>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings,\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, {\r\n      setLayoutSettings,\r\n      setDefaultSettings,\r\n      logoutUser,\r\n    })(Layout1Sidenav)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <MuiThemeProvider theme={footerTheme}>\r\n      <Helmet>\r\n        <style>\r\n          {`\r\n              .footer {\r\n                background: ${footerTheme.palette.primary.main};\r\n                color: ${footerTheme.palette.primary.contrastText};\r\n              }\r\n            `}\r\n        </style>\r\n      </Helmet>\r\n      <div className=\"footer flex flex-middle\">\r\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\r\n          <a href=\"#\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Hotline: 0349655473\r\n            </Button>\r\n          </a>\r\n          <span className=\"m-auto\"></span>\r\n          {/* <p className=\"m-0\">\r\n              Developed by <a href=\"http://globits.net\">Globits</a>\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(Footer)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport AppContext from \"app/appContext\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst ViewLayout1Sidenav = withTranslation()(Layout1Sidenav);\r\nconst ViewLayout1Topbar = withTranslation()(Layout1Topbar);\r\nconst styles = (theme) => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  };\r\n};\r\n\r\nclass Layout1 extends Component {\r\n  componentWillMount() {\r\n    if (isMdScreen()) {\r\n      this.updateSidebarMode({ mode: \"close\" });\r\n    }\r\n  }\r\n\r\n  updateSidebarMode = (sidebarSettings) => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes } = this.props;\r\n\r\n    let { layout1Settings } = settings;\r\n\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode}`]: true,\r\n      \"topbar-fixed\": layout1Settings.topbar.fixed,\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <div className={classList(layoutClasses)}>\r\n            {layout1Settings.leftSidebar.show && <ViewLayout1Sidenav />}\r\n\r\n            <div className=\"content-wrap position-relative\">\r\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                <ViewLayout1Topbar />\r\n              )}\r\n\r\n              {settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings,\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\r\n);\r\n"],"sourceRoot":""}