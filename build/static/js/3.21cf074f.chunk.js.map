{"version":3,"sources":["utils/handleGeneral.js","app/Constants/ListNameTab.js","app/Constants/ListSelectItem.js","app/views/Component/MaterialTableComponent/MaterialTableComponent.jsx","app/Constants/ListTab.js","app/views/RegisterEmployees/TabPanelForm/InformationForm.jsx","app/views/RegisterEmployees/TabPanelForm/CertificateForm.jsx","app/views/RegisterEmployees/SubmitLeaderDialog.jsx","app/views/Component/PaginationComponent/PaginationComponent.jsx","app/views/Component/SearchComponent/SearchComponent.jsx","app/views/Component/BreadcrumbComponent/BreadcrumbComponent.jsx","app/redux/api/apiExperiences.js","app/views/RegisterEmployees/TabPanelForm/ExperiencesForm/ExperiencesForm.jsx","app/views/RegisterEmployees/TabPanelForm/ExperiencesForm/ExperiencesComponent.jsx","app/views/RegisterEmployees/TabPanelForm/ProfileForm.jsx"],"names":["__webpack_require__","d","__webpack_exports__","getNameById","formatCurrency","removeMultipleSpaces","id","listData","teamObj","find","element","Number","leaderName","name","amount","Intl","NumberFormat","style","currency","format","str","replace","VIEW_ONLY","VIEW_SALARY_INCREASE","EDIT_SALARY_INCREASE","VIEW_PROCESS","EDIT_PROCESS","VIEW_PROPOSAL","EDIT_PROPOSAL","ACTION_SALARY_INCREASE","ACTION_PROCESS","ACTION_PROPOSAL","ACTION_END_EMPLOYEE","EDIT_END_EMPLOYEE","statusesForSubmitLeader","statusesForLeaderAction","statusOpenFormSalary","statusOpenFormProcess","statusOpenFormProposal","statusOpenFormEnd","GENDER","TEAM","RELATIONSHIP","LEADER_POSITION","LIST_POSITION","LIST_TYPE_PROPOSAL","TOTAL_OBJECTS_KEY_EMPLOYEE","KEY","NAME","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","material_table__WEBPACK_IMPORTED_MODULE_1__","material_table__WEBPACK_IMPORTED_MODULE_1___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","MaterialTableComponent","_ref","columns","data","height","paging","pageSize","t","useTranslation","a","createElement","options","search","toolbar","draggable","header","filtering","sorting","headerStyle","backgroundColor","color","textAlign","border","minBodyHeight","maxBodyHeight","rowStyle","rowData","index","cellStyle","padding","margin","tableLayout","localization","body","emptyDataSourceMessage","concat","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","TAB_REQUEST","TAB_LEADER_PENDING","TAB_EMPLOYEE","TAB_REGISTER","YEU_CAU_TANG_LUONG","LABEL","YEU_CAU_TANG_CHUC","DE_XUAT_THAM_MUU","CHO_DUYET","CHO_DUYET_TANG_LUONG","CHO_DUYET_THANG_CHUC","NHAN_VIEN","CHUNG_CHI","GIA_DINH","HO_SO","SO_YEU_LY_LICH","VAN_BANG","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","app_Constants_ListSelectItem__WEBPACK_IMPORTED_MODULE_12__","moment_moment__WEBPACK_IMPORTED_MODULE_13__","moment_moment__WEBPACK_IMPORTED_MODULE_13___default","InformationForm","_GENDER$find","_employeeDetail$emplo","_currentDate$getDate","_currentDate$getDate$","_ref2","_ref2$toString","employeeDetail","currentDate","Date","className","container","lg","md","sm","xs","item","alt","src","image","variant","type","value","readOnly","_employeeDetail$gende","gender","toString","moment","dateOfBirth","address","size","multiline","fullWidth","phone","email","ethnic","religion","citizenIdentificationNumber","dateOfIssuanceCard","placeOfIssueCard","width","employeeFamilyDtos","map","row","_RELATIONSHIP$find","key","relationShip","colSpan","align","spacing","justifyContent","submitDay","getDate","padStart","getMonth","year","getFullYear","moment_moment__WEBPACK_IMPORTED_MODULE_9__","moment_moment__WEBPACK_IMPORTED_MODULE_9___default","CertificateForm","_employeeDetail$certi","certificatesDto","certificateName","field","content","issueDate","useStyles","makeStyles","colorStyle","iconClose","position","right","top","SubmitLeaderDialog","_LEADER_POSITION$find","open","handleCloseSubmitLeaderDialog","closeFormRequest","employee","handleCloseRegisterDialog","setEmployee","handleCloseEmployeeDialog","statusOfForm","classes","_useState","useState","leaderId","leaderPosition","submitContent","_useState2","Object","D_l3_preproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","submitDataForm","setSubmitDataForm","dispatch","useDispatch","leaderReducer","useSelector","state","leaders","leadersItem","useEffect","getAllLeadersRequest","handleInputChange","e","_leaderReducer$find","_leaderReducer$find2","target","D_l3_preproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","[object Object]","react__WEBPACK_IMPORTED_MODULE_2___default","onClose","aria-labelledby","maxWidth","aria-label","_material_ui_icons__WEBPACK_IMPORTED_MODULE_13__","onClick","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_14__","onSubmit","commonData","specificData","updateAction","submitProfileStatus","STATUS_EMPLOYEE","CHO_DUYET_KET_THUC","CODE","updateEmployees","salaryIncreaseStatus","updateSalaryIncreaseRequest","processStatus","updateProcessRequest","proposalStatus","updateProposalRequest","STATUS_OF_MANAGE_EMPLOYEE","_specificData","employeeId","STATUS_OF_EMPLOYEE","dividers","label","onChange","validators","errorMessages","placeholder","InputLabelProps","shrink","InputProps","inputProps","min","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","_mui_material_TablePagination__WEBPACK_IMPORTED_MODULE_2__","react_i18next__WEBPACK_IMPORTED_MODULE_3__","customPagination","& p","PaginationComponent","totalRecords","page","setPage","rowPerPage","setRowPerPage","rowsPerPageOptions","component","labelRowsPerPage","from","to","count","onPageChange","event","rowsPerPage","onRowsPerPageChange","backIconButtonProps","nextIconButtonProps","widthStyle","TextFieldSearch","marginLeft","SearchComponent","keywords","setKeywords","egret__WEBPACK_IMPORTED_MODULE_1__","BreadcrumbComponent","manage","title","routeSegments","path","API_PATH","ConstantList","API_ENPOINT","getExperienceById","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","stop","_x","apply","this","arguments","addExperience","_callee2","_context2","post","_x2","_x3","editExperience","_ref3","_callee3","_context3","put","_x4","deleteExperience","_ref4","_callee4","_context4","delete","_x5","theme","customTextField","& .MuiFormLabel-root","& .MuiOutlinedInput-root","&.Mui-focused fieldset","borderColor","ExperiencesForm","experiences","handleGetExperience","companyName","startDate","endDate","jobDescription","companyAddress","slicedToArray","experiencesData","setExperiencesData","_useState3","_useState4","endDateError","setEndDateError","formRef","useRef","objectSpread2","handleChangeExperience","endDateValue","isEndDateValid","isSameOrBefore","startDateValue","handleAddExperience","dataTemp","trim","leavingReason","code","toast","success","error","message","handleEditExperience","react_default","lib","ref","preventDefault","Grid","max","helperText","Button","ExperiencesComponent","isViewMode","listExperiences","setListExperiences","setExperiences","_useState5","_useState6","experiencesId","setExperiencesId","_useState7","_useState8","showDialogExp","setShowDialogExp","_useState9","_useState10","showDeleteDialogExp","setShowDeleteDialogExp","handleAddExp","res","handleCloseDeleteDialogExp","handleDeleteExp","handleDialogDeleteExp","IconButton","Icon","fontSize","TabPanelForm_ExperiencesForm_ExperiencesForm","handleEditExp","class","TextField","ConfirmationDialog","onConfirmDialogClose","onYesClick","text","Yes","No","ProfileForm","_TEAM$find","submitRef","Paper","direction","Avatar","MailOutline_default","LocalPhoneOutlined_default","HomeOutlined_default","PersonOutlineOutlined_default","_employee$gender","CalendarTodayOutlined_default","_employee$knowledge","_employee$skill","_employee$activity","knowledge","skill","activity","display","Typography","team","ExperiencesForm_ExperiencesComponent"],"mappings":"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","file":"static/js/3.21cf074f.chunk.js","sourcesContent":["export const getNameById = (id, listData) => {\r\n    const teamObj = listData.find((element) => Number(element?.id) === Number(id));\r\n    if(teamObj?.leaderName){\r\n      return teamObj?.leaderName;\r\n    }else{\r\n      return teamObj?.name;\r\n    }\r\n  };\r\n\r\n  export const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    }).format(amount);\r\n  };\r\n\r\n export const removeMultipleSpaces = (str) => {\r\n    return str.replace(/\\s{2,}/g, ' ');\r\n  };","\r\nexport const VIEW_ONLY =\"VIEW_ONLY\"\r\nexport const VIEW_SALARY_INCREASE = \"VIEW_SALARY_INCREASE\"\r\nexport const EDIT_SALARY_INCREASE = \"EDIT_SALARY_INCREASE\"\r\nexport const VIEW_PROCESS = \"VIEW_PROCESS\"\r\nexport const EDIT_PROCESS = \"EDIT_PROCESS\"\r\nexport const VIEW_PROPOSAL = \"VIEW_PROPOSAL\"\r\nexport const EDIT_PROPOSAL = \"EDIT_PROPOSAL\"\r\nexport const ACTION_SALARY_INCREASE = \"ACTION_SALARY_INCREASE\"\r\nexport const ACTION_PROCESS = \"ACTION_PROCESS\"\r\nexport const ACTION_PROPOSAL = \"ACTION_PROPOSAL\"\r\nexport const ACTION_END_EMPLOYEE = \"ACTION_END_EMPLOYEE\"\r\nexport const EDIT_END_EMPLOYEE = \"EDIT_END_EMPLOYEE\"\r\n\r\nexport const statusesForSubmitLeader = [EDIT_END_EMPLOYEE ,EDIT_SALARY_INCREASE,EDIT_PROCESS ,EDIT_PROPOSAL ]\r\nexport const statusesForLeaderAction = [ ACTION_END_EMPLOYEE,\r\n    ACTION_SALARY_INCREASE,\r\n    ACTION_PROPOSAL,\r\n    ACTION_PROCESS,]\r\nexport const statusOpenFormSalary = [VIEW_SALARY_INCREASE,ACTION_SALARY_INCREASE,EDIT_SALARY_INCREASE]\r\nexport const statusOpenFormProcess = [VIEW_PROCESS,ACTION_PROCESS,EDIT_PROCESS]\r\nexport const statusOpenFormProposal = [VIEW_PROPOSAL,ACTION_PROPOSAL,EDIT_PROPOSAL]\r\nexport const statusOpenFormEnd = [ACTION_END_EMPLOYEE,EDIT_END_EMPLOYEE,VIEW_ONLY]","export const GENDER = [\r\n  { id: \"0\", name: \"Nam\" },\r\n  { id: \"1\", name: \"Nữ\" },\r\n  { id: \"2\", name: \"Khác\" },\r\n];\r\nexport const TEAM = [\r\n  { id: 1, name: \"Nhóm 1\" },\r\n  { id: 2, name: \"Nhóm 2\" },\r\n  { id: 3, name: \"Nhóm 3\" },\r\n];\r\n\r\nexport const RELATIONSHIP = [\r\n  { id: 1, name: \"Bố\" },\r\n  { id: 2, name: \"Mẹ\" },\r\n  { id: 3, name: \"Em trai\" },\r\n  { id: 4, name: \"Em gái\" },\r\n  { id: 5, name: \"Anh trai\" },\r\n  { id: 6, name: \"Chị gái\" },\r\n  { id: 7, name: \"Ông\" },\r\n  { id: 8, name: \"Bà\" },\r\n];\r\n\r\nexport const LEADER_POSITION = [\r\n  { id: 1, name: \"Trưởng nhóm 1\" },\r\n  { id: 2, name: \"Trưởng nhóm 2\" },\r\n  { id: 3, name: \"Trưởng nhóm 3\" },\r\n  { id: 4, name: \"Trưởng nhóm 4\" },\r\n];\r\n\r\nexport const LIST_POSITION = [\r\n  { id: 6, name: \"Giám đốc\" },\r\n  { id: 5, name: \"Phó Phòng\" },\r\n  { id: 4, name: \"Trưởng phòng\" },\r\n  { id: 3, name: \"tester\" },\r\n  { id: 2, name: \"BE Dev\" },\r\n  { id: 1, name: \"FE Dev\" },\r\n];\r\n\r\nexport const LIST_TYPE_PROPOSAL = [\r\n  { id: 1, name: \"Loại 1\" },\r\n  { id: 2, name: \"Loại 2\" },\r\n  { id: 3, name: \"Loại 3\" },\r\n];\r\n\r\nexport const TOTAL_OBJECTS_KEY_EMPLOYEE = {\r\n  KEY: 13,\r\n  NAME: \"TOTAL_OBJECTS_KEY\",\r\n};\r\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst MaterialTableComponent = ({\r\n  columns,\r\n  data,\r\n  height,\r\n  paging,\r\n  pageSize,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <MaterialTable\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        search: false,\r\n        toolbar: false,\r\n        draggable: false,\r\n        header: true,\r\n        filtering: false,\r\n        sorting: false,\r\n        headerStyle: {\r\n          backgroundColor: \"#7467ef\",\r\n          color: \"#fff\",\r\n          textAlign: \"center\",\r\n          border: \"1px solid #dee2e6\",\r\n        },\r\n        paging: paging,\r\n        minBodyHeight: height,\r\n        maxBodyHeight: height,\r\n        pageSize: pageSize,\r\n        rowStyle: (rowData, index) => ({\r\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n          border: \"1px solid #99999978\",\r\n        }),\r\n        cellStyle: {\r\n          border: \"1px solid #dee2e6\",\r\n          padding: \"0 10px\",\r\n          margin: \"0\",\r\n        },\r\n        padding: \"dense\",\r\n        tableLayout: \"auto\",\r\n      }}\r\n      localization={{\r\n        body: {\r\n          emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n        },\r\n        pagination: {\r\n          labelRowsSelect: `Bản ghi`,\r\n          labelDisplayedRows: `{from}-{to} trong {count}`,\r\n          firstTooltip: \"Trang đầu\",\r\n          previousTooltip: \"Trang trước\",\r\n          nextTooltip: \"Trang tiếp\",\r\n          lastTooltip: \"Trang cuối\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MaterialTableComponent;\r\n","export const TAB_REQUEST = {\r\n  YEU_CAU_TANG_LUONG: { KEY: 0, LABEL: \"Yêu cầu tăng lương\" },\r\n  YEU_CAU_TANG_CHUC: { KEY: 1, LABEL: \"Yêu cầu tăng chức\" },\r\n  DE_XUAT_THAM_MUU: { KEY: 2, LABEL: \"Đề xuất tham mưu\" },\r\n};\r\n\r\nexport const TAB_LEADER_PENDING = {\r\n  CHO_DUYET: { KEY: 0, LABEL: \"Chờ duyệt\" },\r\n  CHO_DUYET_TANG_LUONG: { KEY: 1, LABEL: \"Chờ duyệt tăng lương\" },\r\n  CHO_DUYET_THANG_CHUC: { KEY: 2, LABEL: \"Chờ duyệt thăng chức\" },\r\n  DE_XUAT_THAM_MUU: { KEY: 3, LABEL: \"Đề xuất tham mưu\" },\r\n};\r\n\r\nexport const TAB_EMPLOYEE = {\r\n  NHAN_VIEN: { KEY: 0, LABEL: \"Nhân viên\" },\r\n  CHUNG_CHI: { KEY: 1, LABEL: \"Chứng chỉ\" },\r\n  GIA_DINH: { KEY: 2, LABEL: \"Gia đình\" },\r\n};\r\n\r\nexport const TAB_REGISTER = {\r\n    HO_SO: { KEY: 0, LABEL: \"Hồ sơ\" },\r\n    SO_YEU_LY_LICH: { KEY: 1, LABEL: \"Sơ yêu lý lịch\" },\r\n    VAN_BANG: { KEY: 2, LABEL: \"Văn bằng\" },\r\n  };","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Avatar,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport \"../../../../styles/views/_informationForm.scss\";\r\nimport { GENDER, RELATIONSHIP } from \"app/Constants/ListSelectItem\";\r\nimport moment from \"moment/moment\";\r\nconst InformationForm = ({ employeeDetail }) => {\r\n  const currentDate = new Date();\r\n  return (\r\n    <Paper className=\"root-info\">\r\n      <Grid\r\n        container\r\n        lg={12}\r\n        md={12}\r\n        sm={12}\r\n        xs={12}\r\n        className=\"background-info\"\r\n      >\r\n        <Grid item lg={4} md={4} sm={4} xs={4}>\r\n          <Avatar\r\n            className=\"avatar-info\"\r\n            alt=\"4x6\"\r\n            src={employeeDetail?.image}\r\n            variant=\"square\"\r\n          />\r\n        </Grid>\r\n        <Grid item lg={8} md={8} sm={8} xs={8}>\r\n          <h3 className=\"title-information\">\r\n            CỘNG HÒA XÃ HỘI CHỦ NGHĨA VIỆT NAM\r\n          </h3>\r\n          <h4 className=\"title-information\">Độc lập - Tự do - Hạnh phúc</h4>\r\n          <p className=\"title-information mb-48\">---------------</p>\r\n          <h2 className=\"title-info mb-8\">SƠ YẾU LÝ LỊCH</h2>\r\n          <h2 className=\"title-info-2 \">TỰ THUẬT</h2>\r\n        </Grid>\r\n        <Grid item lg={12} md={12} sm={12} xs={12} className=\"mb-28\">\r\n          <Grid item className=\"mb-20\">\r\n            <h3 className=\"font-custom-title mt-48\">I. THÔNG TIN CÁ NHÂN</h3>\r\n          </Grid>\r\n          <Grid item container className=\"mb-16\">\r\n            <Grid container item lg={8} md={8} sm={8} xs={8}>\r\n              <Typography className=\"font-custom\">\r\n                1. Họ và tên(chữ in hoa):{\" \"}\r\n              </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-name\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.name}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n            <Grid container item lg={4} md={4} sm={4} xs={4}>\r\n              <Typography className=\"font-custom\">2. Giới tính: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={\r\n                    GENDER.find(\r\n                      (item) => item.id === employeeDetail?.gender?.toString()\r\n                    )?.name\r\n                  }\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className=\"mb-12\">\r\n            <Grid container item lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">3. Ngày sinh: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={moment(employeeDetail?.dateOfBirth).format(\r\n                    \"DD/MM/YYYY\"\r\n                  )}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n            <Grid item container lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">4. Nơi sinh: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail.address}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            className=\"mb-12\"\r\n            container\r\n          >\r\n            <Typography className=\"font-custom\">5. Nơi ở hiện nay: </Typography>\r\n\r\n            <span className=\"area-dotted-span-address\">\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={employeeDetail?.address}\r\n                readOnly\r\n                size=\"small\"\r\n                multiline\r\n                fullWidth\r\n                className=\"area-dotted-address\"\r\n              />\r\n            </span>\r\n          </Grid>\r\n          <Grid item container className=\"mb-12\">\r\n            <Grid item container lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">6. Điện thoại: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.phone}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n            <Grid item container lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">7. Email: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.email}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className=\"mb-12\">\r\n            <Grid item container lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">8. Dân tộc: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.ethnic}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n            <Grid item container lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">9. Tôn giáo: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.religion}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container className=\"mb-12\">\r\n            <Grid container item lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">\r\n                10. Số chứng minh:\r\n              </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={employeeDetail?.citizenIdentificationNumber}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n            <Grid container item lg={6} md={6} sm={6} xs={6}>\r\n              <Typography className=\"font-custom\">11. Ngày cấp: </Typography>\r\n              <span className=\"dotted-input\">\r\n                <input\r\n                  className=\"font-custom\"\r\n                  type=\"text\"\r\n                  value={moment(employeeDetail?.dateOfIssuanceCard).format(\r\n                    \"DD/MM/YYYY\"\r\n                  )}\r\n                  readOnly\r\n                />\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            className=\"mb-12\"\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n          >\r\n            <Typography className=\"font-custom\">12. Nơi cấp: </Typography>\r\n            <span className=\"area-dotted\">\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"placeOfIssueCard\"\r\n                value={employeeDetail?.placeOfIssueCard}\r\n                readOnly\r\n                size=\"small\"\r\n                multiline\r\n                fullWidth\r\n                className=\"area-dotted-placeOfIssueCard\"\r\n              />\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item lg={12} md={12} sm={12} xs={12} className=\"mb-32\">\r\n          <Grid item className=\"mb-20\">\r\n            <h3 className=\"font-custom-title mb-24\">II. QUAN HỆ GIA ĐÌNH</h3>\r\n            <p className=\"mb-16 custom-note\">Ghi rõ họ tên, năm sinh, địa chỉ , mối quan hệ, căn cước công dân của bố mẹ đẻ, anh chị em ruột, vợ (hoặc chồng), con.</p>\r\n            <Grid item container className=\"mb-20\">\r\n              <Table className=\"TableComponent\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell width={\"10%\"}>STT</TableCell>\r\n                    <TableCell width={\"20%\"}>Họ tên</TableCell>\r\n                    <TableCell width={\"17%\"}>Ngày sinh</TableCell>\r\n                    <TableCell width={\"13%\"}>Quan hệ</TableCell>\r\n                    <TableCell width={\"20%\"}>\r\n                      Địa chỉ\r\n                    </TableCell>\r\n                    <TableCell width={\"20%\"}>Số CCCD</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {employeeDetail?.employeeFamilyDtos ? (\r\n                    employeeDetail?.employeeFamilyDtos?.map((row, index) => (\r\n                      <TableRow key={row.id}>\r\n                        <TableCell width={\"10%\"}>{index + 1}</TableCell>\r\n                        <TableCell width={\"20%\"} className=\"address-table\">{row.name}</TableCell>\r\n                        <TableCell width={\"17%\"}>\r\n                          {moment(row?.dateOfBirth).format(\"DD/MM/YYYY\")}\r\n                        </TableCell>\r\n                        <TableCell width={\"13%\"}>\r\n                          {\r\n                            RELATIONSHIP.find(\r\n                              (item) => item.id === row?.relationShip\r\n                            )?.name\r\n                          }\r\n                        </TableCell>\r\n                        <TableCell className=\"address-table\" width={\"20%\"}>\r\n                          {row.address}\r\n                        </TableCell>\r\n                        <TableCell width={\"20%\"}>\r\n                          {row.citizenIdentificationNumber}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableCell colSpan={5} align=\"center\"></TableCell>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              spacing={2}\r\n              justifyContent=\"center\"\r\n              className=\"mt-16\"\r\n            >\r\n              <Grid item xs={12} className=\"title-promise\">\r\n                <h5 className=\"title-promise\">LỜI CAM ĐOAN</h5>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <p className=\"title-des\">\r\n                  Tôi xin cam đoan bản khai sơ yếu lý lịch trên đúng sự thật,\r\n                  nếu có điều gì không đúng tôi chịu trách nhiệm trước pháp luật\r\n                  về lời khai của mình.\r\n                </p>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container className=\"signature-class\">\r\n              <Grid item className=\"signature-employee\">\r\n                <p className=\"signature-text signature-font-style\">\r\n                  <span className=\"signature-text signature-font-style\">\r\n                    Hà Nội, ngày\r\n                  </span>\r\n                  <span className=\"dotted-input-day\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={\r\n                        employeeDetail?.submitDay\r\n                          ? moment(employeeDetail.submitDay).format(\"DD\")\r\n                          : currentDate.getDate()?.toString()?.padStart(2, \"0\")\r\n                      }\r\n                      readOnly\r\n                    />\r\n                  </span>\r\n\r\n                  <span className=\"signature-text signature-font-style\">\r\n                    tháng\r\n                  </span>\r\n                  <span className=\"dotted-input-day\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={\r\n                        employeeDetail?.submitDay\r\n                          ? moment(employeeDetail.submitDay).format(\"MM\")\r\n                          : (currentDate.getMonth() + 1)\r\n                              ?.toString()\r\n                              ?.padStart(2, \"0\")\r\n                      }\r\n                      readOnly\r\n                    />\r\n                  </span>\r\n                  <span className=\"signature-text signature-font-style\">\r\n                    năm\r\n                  </span>\r\n                  <span className=\"dotted-input-day\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={\r\n                        employeeDetail?.submitDay\r\n                          ? moment(employeeDetail.submitDay).year()\r\n                          : currentDate.getFullYear()\r\n                      }\r\n                      readOnly\r\n                    />\r\n                  </span>\r\n                </p>\r\n                <h5 className=\"signature-text signature-font-weight signature-font-size-1\">\r\n                  NGƯỜI KHAI\r\n                </h5>\r\n                <p className=\"signature-text signature-font-style signature-margin\">\r\n                  {\" \"}\r\n                  (Ký, ghi rõ họ tên)\r\n                </p>\r\n                <p className=\"signature-text signature-font-weight signature-font-size-2\">\r\n                  {employeeDetail?.name}\r\n                </p>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InformationForm;\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport \"../../../../styles/views/_certificateForm.scss\";\r\nimport moment from \"moment/moment\";\r\nconst CertificateForm = ({ employeeDetail }) => {\r\n  return (\r\n    <Paper className=\"root-degree\">\r\n      <Grid container lg={12} md={12} sm={12} xs={12} className=\"background-degree\">\r\n        <Grid item>\r\n          <h5 className=\"title-degree mb-16\">VĂN BẰNG</h5>\r\n        </Grid>\r\n        <Grid item>\r\n          <Table className=\"TableComponent\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width={\"10%\"}>STT</TableCell>\r\n                <TableCell width={\"25%\"}>Tên văn bằng</TableCell>\r\n                <TableCell>Xếp loại</TableCell>\r\n                <TableCell width={\"30%\"}>Nội dung</TableCell>\r\n                <TableCell>Ngày cấp</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {employeeDetail?.certificatesDto ? (\r\n                employeeDetail?.certificatesDto?.map((row, index) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell width={\"10%\"}>{index + 1}</TableCell>\r\n                    <TableCell width={\"25%\"} className=\"content-table\">{row.certificateName}</TableCell>\r\n                    <TableCell>{row.field}</TableCell>\r\n                    <TableCell width={\"30%\"} className=\"content-table\">{row.content}</TableCell>\r\n                    <TableCell>\r\n                      {moment(row?.issueDate).format(\"DD/MM/YYYY\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableCell colSpan={5} align=\"center\">\r\n                  \r\n                </TableCell>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CertificateForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Grid,\r\n  makeStyles,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  TextValidator,\r\n  ValidatorForm,\r\n  SelectValidator,\r\n} from \"react-material-ui-form-validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { getAllLeadersRequest } from \"app/redux/actions/LeaderAction\";\r\nimport { LEADER_POSITION } from \"app/Constants/ListSelectItem\";\r\nimport {\r\n  STATUS_EMPLOYEE,\r\n  STATUS_OF_EMPLOYEE,\r\n  STATUS_OF_MANAGE_EMPLOYEE,\r\n} from \"app/Constants/ListStatus\";\r\nimport { updateEmployees } from \"app/redux/actions/EmployeeActions\";\r\nimport {\r\n  EDIT_END_EMPLOYEE,\r\n  EDIT_PROCESS,\r\n  EDIT_PROPOSAL,\r\n  EDIT_SALARY_INCREASE,\r\n} from \"app/Constants/ListNameTab\";\r\nimport { updateSalaryIncreaseRequest } from \"app/redux/actions/SalaryIncreaseAction\";\r\nimport { updateProposalRequest } from \"app/redux/actions/ProposalAction\";\r\nimport { updateProcessRequest } from \"app/redux/actions/ProcessAction\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst SubmitLeaderDialog = ({\r\n  open,\r\n  handleCloseSubmitLeaderDialog,\r\n  closeFormRequest,\r\n  employee,\r\n  setEmployee,\r\n  handleCloseRegisterDialog,\r\n  handleCloseEmployeeDialog,\r\n  statusOfForm,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [submitDataForm, setSubmitDataForm] = useState({\r\n    submitDay: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n    leaderId: \"\",\r\n    leaderName: \"\",\r\n    leaderPosition: \"\",\r\n    submitContent: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const leaderReducer = useSelector((state) => state.leaders.leadersItem);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllLeadersRequest());\r\n  }, [dispatch]);\r\n\r\n  const handleInputChange = (e) => {\r\n    if (e.target.name === \"leaderId\") {\r\n      setSubmitDataForm({\r\n        ...submitDataForm,\r\n        [e.target.name]: e.target.value,\r\n        leaderName: leaderReducer.find((item) => item.id === e.target.value)\r\n          ?.leaderName,\r\n        leaderPosition: leaderReducer.find((item) => item.id === e.target.value)\r\n          ?.leaderPosition,\r\n      });\r\n    } else {\r\n      setSubmitDataForm({\r\n        ...submitDataForm,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const commonData = {\r\n      ...employee,\r\n      submitDay: submitDataForm?.submitDay,\r\n      leaderId: submitDataForm?.leaderId,\r\n      leaderName: submitDataForm?.leaderName,\r\n      submitContent: submitDataForm?.submitContent,\r\n    };\r\n\r\n    let specificData = {};\r\n    let updateAction = null;\r\n\r\n    switch (statusOfForm) {\r\n      case EDIT_END_EMPLOYEE:\r\n        specificData = {\r\n          ...commonData,\r\n          leaderPosition: submitDataForm?.leaderPosition,\r\n          submitProfileStatus: STATUS_EMPLOYEE.CHO_DUYET_KET_THUC.CODE,\r\n        };\r\n        updateAction = updateEmployees;\r\n        break;\r\n      case EDIT_SALARY_INCREASE:\r\n        specificData = {\r\n          ...commonData,\r\n          salaryIncreaseStatus: STATUS_EMPLOYEE.CHO_DUYET.CODE,\r\n        };\r\n        updateAction = updateSalaryIncreaseRequest;\r\n        break;\r\n      case EDIT_PROCESS:\r\n        specificData = {\r\n          ...commonData,\r\n          processStatus: STATUS_EMPLOYEE.CHO_DUYET.CODE,\r\n        };\r\n        updateAction = updateProcessRequest;\r\n        break;\r\n      case EDIT_PROPOSAL:\r\n        specificData = {\r\n          ...commonData,\r\n          proposalStatus: STATUS_EMPLOYEE.CHO_DUYET.CODE,\r\n        };\r\n        updateAction = updateProposalRequest;\r\n        break;\r\n      default:\r\n        specificData = {\r\n          ...commonData,\r\n          leaderPosition: submitDataForm?.leaderPosition,\r\n          submitProfileStatus: STATUS_EMPLOYEE.CHO_DUYET.CODE,\r\n        };\r\n        updateAction = updateEmployees;\r\n        handleCloseEmployeeDialog();\r\n        break;\r\n    }\r\n    if (!statusOfForm) {\r\n      dispatch(updateAction(specificData, STATUS_OF_EMPLOYEE));\r\n    } else if (statusOfForm === EDIT_END_EMPLOYEE) {\r\n      dispatch(updateAction(specificData, STATUS_OF_MANAGE_EMPLOYEE));\r\n      handleCloseRegisterDialog()\r\n    } else {\r\n      dispatch(updateAction(specificData, specificData?.employeeId));\r\n      handleCloseSubmitLeaderDialog();\r\n    }\r\n\r\n    if (\r\n      statusOfForm === EDIT_SALARY_INCREASE ||\r\n      statusOfForm === EDIT_PROCESS ||\r\n      statusOfForm === EDIT_PROPOSAL\r\n    ) {\r\n      closeFormRequest();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseSubmitLeaderDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">Trình lãnh đạo</span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={handleCloseSubmitLeaderDialog} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          <DialogContent dividers>\r\n            <Grid container spacing={2}>\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <TextValidator\r\n                  name=\"submitDay\"\r\n                  type=\"date\"\r\n                  label={\r\n                    <span>\r\n                      <span className=\"red-color\"> * </span>\r\n                      Ngày trình lãnh đạo\r\n                    </span>\r\n                  }\r\n                  value={submitDataForm?.submitDay}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng chọn ngày trình\"]}\r\n                  placeholder=\"Chọn ngày trình\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  InputProps={{\r\n                    inputProps: {\r\n                      min: moment().format(\"YYYY-MM-DD\"),\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <FormControl fullWidth>\r\n                  <SelectValidator\r\n                    name=\"leaderId\"\r\n                    value={submitDataForm?.leaderId || \"\"}\r\n                    label={\r\n                      <span>\r\n                        <span className=\"red-color\"> * </span>\r\n                        Tên lãnh đạo\r\n                      </span>\r\n                    }\r\n                    onChange={handleInputChange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn lãnh đạo\"]}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  >\r\n                    {leaderReducer &&\r\n                      leaderReducer.map((item) => {\r\n                        return (\r\n                          <MenuItem key={item.id} value={item.id}>\r\n                            {item.leaderName}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <TextValidator\r\n                  name=\"leaderPosition\"\r\n                  label={\r\n                    <span>\r\n                      <span className=\"red-color\"> * </span>\r\n                      Chức vụ\r\n                    </span>\r\n                  }\r\n                  value={\r\n                    LEADER_POSITION.find(\r\n                      (item) => item.id === submitDataForm?.leaderPosition\r\n                    )?.name || \"\"\r\n                  }\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập chức vụ\"]}\r\n                  placeholder=\"Nhập chức vụ\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  name=\"submitContent\"\r\n                  label={\r\n                    <span>\r\n                      <span className=\"red-color\"> * </span>\r\n                      Nội dung\r\n                    </span>\r\n                  }\r\n                  value={submitDataForm?.submitContent || \"\"}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập nội dung\"]}\r\n                  placeholder=\"Nhập nội dung\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle button-center\"\r\n          >\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Gửi\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleCloseSubmitLeaderDialog}\r\n            >\r\n              Hủy\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitLeaderDialog;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst useStyles = makeStyles({\r\n  customPagination: {\r\n    \"& p\": {\r\n      margin: 0,\r\n    },\r\n  },\r\n});\r\nconst PaginationComponent = ({\r\n  totalRecords,\r\n  page,\r\n  setPage,\r\n  rowPerPage,\r\n  setRowPerPage,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <TablePagination\r\n      align=\"left\"\r\n      className={`px-16 ${classes.customPagination}`}\r\n      rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n      component=\"div\"\r\n      labelRowsPerPage={t(\"general.rows_per_page\")}\r\n      labelDisplayedRows={({ from, to, count }) =>\r\n        `${from}-${to} ${t(\"general.of\")} ${\r\n          count !== -1 ? count : `more than ${to}`\r\n        }`\r\n      }\r\n      count={totalRecords}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n      backIconButtonProps={{\r\n        \"aria-label\": \"Previous Page\",\r\n      }}\r\n      nextIconButtonProps={{\r\n        \"aria-label\": \"Next Page\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  widthStyle: {\r\n    width: \"300px\",\r\n  },\r\n  TextFieldSearch: {\r\n    width: \"300px\",\r\n    marginLeft: \"auto\",\r\n  },\r\n});\r\nconst SearchComponent = ({ keywords, setKeywords }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className=\"input-search  mt-16 mb-16 \">\r\n      <div>\r\n        <TextField\r\n          name=\"fullName\"\r\n          label=\"Tìm kiếm\"\r\n          value={keywords}\r\n          onChange={(e) => {\r\n            setKeywords(e.target.value);\r\n          }}\r\n          className={classes.TextFieldSearch}\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n","import React from 'react'\r\nimport { Breadcrumb } from \"egret\";\r\nconst BreadcrumbComponent = ({manage, title}) => {\r\n  return (\r\n    <div className=\"mb-sm-30\">\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: manage, path: \"home\" },\r\n            { name: title },\r\n          ]}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default BreadcrumbComponent","import axios from \"axios\";\r\nimport ConstantList from \"../../appConfig\";\r\n\r\nconst API_PATH = ConstantList.API_ENPOINT;\r\n\r\nexport const getExperienceById = async (id) => {\r\n  const response = await axios.get(API_PATH + `/experience?employeeId=${id}`);\r\n  return response?.data;\r\n};\r\n\r\nexport const addExperience = async (id, data) => {\r\n  const response = await axios.post(\r\n    API_PATH + `/experience?employeeId=${id}`,\r\n    data\r\n  );\r\n  return response?.data;\r\n};\r\n\r\nexport const editExperience = async (data) => {\r\n  const response = await axios.put(API_PATH + `/experience/${data.id}`, data);\r\n  return response?.data;\r\n}\r\n\r\nexport const deleteExperience = async (id) => {\r\n  const response = await axios.delete(API_PATH + \"/experience/\" + id);\r\n  return response?.data;\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { addExperience, editExperience } from \"app/redux/api/apiExperiences\";\r\nimport moment from \"moment\";\r\nimport { removeMultipleSpaces } from \"../../../../../utils/handleGeneral\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  customTextField: {\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"#333 !important\", // Màu chữ tùy chỉnh\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#333\", // Màu outline khi focus\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst ExperiencesForm = ({\r\n  onClose,\r\n  experiences,\r\n  employeeId,\r\n  handleGetExperience,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [experiencesData, setExperiencesData] = useState({\r\n    companyName: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    jobDescription: \"\",\r\n    companyAddress: \"\",\r\n  });\r\n  const [endDateError, setEndDateError] = useState(\"\");\r\n  const formRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (experiences?.id) {\r\n      setExperiencesData({\r\n        ...experiences,\r\n        startDate: moment(experiences.startDate).format(\"YYYY-MM-DD\"),\r\n        endDate: moment(experiences.endDate).format(\"YYYY-MM-DD\"),\r\n      });\r\n    }\r\n  }, [experiences]);\r\n\r\n  const handleChangeExperience = (e) => {\r\n    setExperiencesData({\r\n      ...experiencesData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    if (e.target.name === \"endDate\") {\r\n      const endDateValue = e.target.value;\r\n      const isEndDateValid = moment(experiencesData.startDate).isSameOrBefore(\r\n        moment(endDateValue)\r\n      );\r\n      if (!isEndDateValid) {\r\n        setEndDateError(\"Ngày kết thúc phải lớn hơn hoặc bằng ngày bắt đầu.\");\r\n      } else {\r\n        setEndDateError(\"\");\r\n      }\r\n    }\r\n    if (e.target.name === \"startDate\") {\r\n      const startDateValue = e.target.value;\r\n      const isEndDateValid = moment(startDateValue).isSameOrBefore(\r\n        moment(experiencesData.endDate)\r\n      );\r\n      if (!isEndDateValid) {\r\n        setEndDateError(\"Ngày kết thúc phải lớn hơn hoặc bằng ngày bắt đầu.\");\r\n      } else {\r\n        setEndDateError(\"\");\r\n      }\r\n    }\r\n    if (e.target.name === \"jobDescription\") {\r\n      setExperiencesData({\r\n        ...experiencesData,\r\n        [e.target.name]: removeMultipleSpaces(e.target.value),\r\n      });\r\n    }\r\n  };\r\n  const handleAddExperience = async () => {\r\n    const dataTemp = {\r\n      ...experiencesData,\r\n      jobDescription: experiencesData?.jobDescription.trim(),\r\n      leavingReason: \"Moi truong khong hop\",\r\n    };\r\n    const response = await addExperience(employeeId, [dataTemp]);\r\n    if (response?.code === 200) {\r\n      handleGetExperience();\r\n      toast.success(\"Thêm kinh nghiệm làm việc thành công!\");\r\n    } else {\r\n      toast.error(response?.message);\r\n    }\r\n    onClose();\r\n  };\r\n  const handleEditExperience = async () => {\r\n    const dataTemp = {\r\n      ...experiencesData,\r\n      jobDescription: experiencesData?.jobDescription.trim(),\r\n    };\r\n    const response = await editExperience(dataTemp);\r\n    if (response?.code === 200) {\r\n      handleGetExperience();\r\n      toast.success(\"Sửa kinh nghiệm làm việc thành công!\");\r\n    } else {\r\n      toast.error(response?.message);\r\n    }\r\n\r\n    onClose();\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (endDateError) {\r\n      return;\r\n    }\r\n    if (experiencesData?.id) {\r\n      handleEditExperience();\r\n    } else {\r\n      handleAddExperience();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <ValidatorForm ref={formRef} onSubmit={handleSubmit} className=\"mb-16\">\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}>\r\n            <TextValidator\r\n              className={classes.customTextField}\r\n              name=\"startDate\"\r\n              type=\"date\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Ngày bắt đầu\r\n                </span>\r\n              }\r\n              value={experiencesData.startDate || \"\"}\r\n              onChange={handleChangeExperience}\r\n              fullWidth\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"Vui lòng chọn ngày bắt đầu\"]}\r\n              placeholder=\"Chọn ngày bắt đầu\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: moment().format(\"YYYY-MM-DD\"),\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}>\r\n            <TextValidator\r\n              className={classes.customTextField}\r\n              name=\"endDate\"\r\n              type=\"date\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Ngày kết thúc\r\n                </span>\r\n              }\r\n              value={experiencesData.endDate || \"\"}\r\n              onChange={handleChangeExperience}\r\n              fullWidth\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"Vui lòng chọn ngày kết thúc\"]}\r\n              placeholder=\"Chọn ngày kết thúc\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: moment().format(\"YYYY-MM-DD\"),\r\n                },\r\n              }}\r\n              helperText={endDateError}\r\n              error={!!endDateError}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}>\r\n            <TextValidator\r\n              className={classes.customTextField}\r\n              name=\"companyName\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Tên công ty\r\n                </span>\r\n              }\r\n              value={experiencesData?.companyName || \"\"}\r\n              onChange={handleChangeExperience}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:50\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập tên công ty\",\r\n                \"Tên công ty không quá 50 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập tên công ty\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={6} md={6} sm={12} xs={12}>\r\n            <TextValidator\r\n              className={classes.customTextField}\r\n              name=\"companyAddress\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Địa chỉ\r\n                </span>\r\n              }\r\n              value={experiencesData?.companyAddress || \"\"}\r\n              onChange={handleChangeExperience}\r\n              fullWidth\r\n              validators={[\"required\", \"maxStringLength:60\"]}\r\n              errorMessages={[\r\n                \"Vui lòng nhập địa chỉ công ty\",\r\n                \"Địa chỉ không quá 60 ký tự\",\r\n              ]}\r\n              placeholder=\"Nhập địa chỉ công ty\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <TextValidator\r\n              className={classes.customTextField}\r\n              name=\"jobDescription\"\r\n              label={\r\n                <span>\r\n                  <span className=\"red-color\"> * </span>\r\n                  Mô tả công việc\r\n                </span>\r\n              }\r\n              value={experiencesData?.jobDescription || \"\"}\r\n              onChange={handleChangeExperience}\r\n              fullWidth\r\n              validators={[\"required\"]}\r\n              errorMessages={[\"Vui lòng nhập mô tả công việc\"]}\r\n              placeholder=\"Nhập mô tả công việc\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              multiline\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"mt-12 flex flex-end\">\r\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n            Lưu\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={onClose}\r\n            className=\"ml-8\"\r\n          >\r\n            Hủy\r\n          </Button>\r\n        </div>\r\n      </ValidatorForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperiencesForm;\r\n","import { Grid, Icon, IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ExperiencesForm from \"./ExperiencesForm\";\r\nimport {\r\n  deleteExperience,\r\n  getExperienceById,\r\n} from \"app/redux/api/apiExperiences\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment/moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../../../styles/views/_profileForm.scss\";\r\nimport ConfirmationDialog from \"egret/components/ConfirmationDialog\";\r\n\r\nconst ExperiencesComponent = ({ employee, isViewMode }) => {\r\n  const { t } = useTranslation();\r\n  const [listExperiences, setListExperiences] = useState([]);\r\n  const [experiences, setExperiences] = useState({});\r\n  const [experiencesId, setExperiencesId] = useState(\"\");\r\n  const [showDialogExp, setShowDialogExp] = useState(false);\r\n  const [showDeleteDialogExp, setShowDeleteDialogExp] = useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setShowDialogExp(!showDialogExp);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setShowDialogExp(false);\r\n  };\r\n\r\n  const handleAddExp = () => {\r\n    handleOpenDialog();\r\n    setExperiences({});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (employee?.id) {\r\n      handleGetExperience();\r\n    }\r\n  }, [employee]);\r\n\r\n  const handleGetExperience = async () => {\r\n    if (employee?.id) {\r\n      const res = await getExperienceById(employee?.id);\r\n      if (res?.code === 200) {\r\n        setListExperiences(res?.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditExp = (item) => {\r\n    setExperiences(item);\r\n    setShowDialogExp(true);\r\n  };\r\n\r\n  const handleOpenDeleteDialogExp = () => {\r\n    setShowDeleteDialogExp(true);\r\n  };\r\n\r\n  const handleCloseDeleteDialogExp = () => {\r\n    setShowDeleteDialogExp(false);\r\n  };\r\n\r\n  const handleDeleteExp = (id) => {\r\n    setExperiencesId(id);\r\n    handleOpenDeleteDialogExp();\r\n  };\r\n\r\n  const handleDialogDeleteExp = async () => {\r\n    const response = await deleteExperience(experiencesId);\r\n    if (response?.code === 200) {\r\n      handleGetExperience();\r\n      toast.success(\"Xóa kinh nghiệm làm việc thành công!\");\r\n    } else {\r\n      toast.error(response?.message);\r\n    }\r\n    handleCloseDeleteDialogExp();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <Grid container className=\"flex-space-between mb-4\">\r\n          <h3 className=\"font-weight-bold my-auto  custom-font\">\r\n            {\"KINH NGHIỆM LÀM VIỆC\"}{\" \"}\r\n          </h3>\r\n          <IconButton\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              handleAddExp();\r\n            }}\r\n            className={isViewMode ? \"hidden\" : \"\"}\r\n          >\r\n            <Icon fontSize=\"large\" color=\"default\">\r\n              add\r\n            </Icon>\r\n          </IconButton>\r\n        </Grid>\r\n        {showDialogExp && (\r\n          <ExperiencesForm\r\n            onClose={handleCloseDialog}\r\n            experiences={experiences}\r\n            employeeId={employee?.id}\r\n            handleGetExperience={handleGetExperience}\r\n          ></ExperiencesForm>\r\n        )}\r\n        {listExperiences &&\r\n          listExperiences.map((item) => {\r\n            return (\r\n              <Grid item key={item.id}  className=\"mb-16 experience-item\">\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                >\r\n                  <div className=\"companyName-class\">\r\n                    <span className=\"date-font line-break\">\r\n                      {item.companyName}\r\n                    </span>\r\n                    <span className=\"experience-buttons\">\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          handleEditExp(item);\r\n                        }}\r\n                        className={isViewMode ? \"hidden\" : \"\"}\r\n                      >\r\n                        <Icon color=\"primary\">edit</Icon>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                          handleDeleteExp(item?.id);\r\n                        }}\r\n                        className={isViewMode ? \"hidden\" : \"\"}\r\n                      >\r\n                        <Icon color=\"error\">delete</Icon>\r\n                      </IconButton>\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  className=\"mb-8\"\r\n                >\r\n                  <div className=\"box-date\">\r\n                    <span class=\"date-font\">\r\n                      {moment(item.startDate).format(\"DD/MM/YYYY\")}\r\n                    </span>\r\n                    <span className=\"font-weight-bold icon-custom\">-</span>\r\n                    <span class=\"date-font\">\r\n                      {moment(item.endDate).format(\"DD/MM/YYYY\")}\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  className=\"mb-8 description-container\"\r\n                >\r\n                  <div className=\"box-description\">\r\n                     <h4>Mô tả công việc:</h4>\r\n                    <span className=\"description-exp\">\r\n                      <TextField\r\n                        type=\"text\"\r\n                        value={item.jobDescription}\r\n                        readOnly\r\n                        multiline\r\n                        className=\"area-dotted-exp\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        InputProps={{\r\n                          readOnly: isViewMode,\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      {showDeleteDialogExp && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialogExp}\r\n          onConfirmDialogClose={handleCloseDeleteDialogExp}\r\n          onYesClick={handleDialogDeleteExp}\r\n          title={\"Xóa nhân viên\"}\r\n          text={`Bạn có muốn xóa kinh nghiệm làm việc không?`}\r\n          Yes={t(\"general.delete\")}\r\n          No={t(\"general.cancel\")}\r\n        ></ConfirmationDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperiencesComponent;\r\n","import React from \"react\";\r\nimport { Typography, Paper, Grid, Avatar, Button } from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport LocalPhoneOutlinedIcon from \"@material-ui/icons/LocalPhoneOutlined\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport CalendarTodayOutlinedIcon from \"@material-ui/icons/CalendarTodayOutlined\";\r\nimport \"../../../../styles/views/_profileForm.scss\";\r\nimport ExperiencesComponent from \"./ExperiencesForm/ExperiencesComponent\";\r\nimport { GENDER, TEAM } from \"app/Constants/ListSelectItem\";\r\nimport moment from \"moment/moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateEmployees } from \"app/redux/actions/EmployeeActions\";\r\nimport { STATUS_OF_EMPLOYEE } from \"app/Constants/ListStatus\";\r\nimport { removeMultipleSpaces } from \"../../../../utils/handleGeneral\";\r\nconst ProfileForm = ({ employee, setEmployee, submitRef, isViewMode }) => {\r\n  const dispatch = useDispatch();\r\n  const handleInputChange = (e) => {\r\n    setEmployee({\r\n      ...employee,\r\n      [e.target.name]: removeMultipleSpaces(e.target.value),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const dataTemp = {\r\n      ...employee,\r\n      knowledge: employee?.knowledge?.trim(),\r\n      skill: employee?.skill?.trim(),\r\n      activity: employee?.activity?.trim(),\r\n    };\r\n    dispatch(updateEmployees(dataTemp, STATUS_OF_EMPLOYEE));\r\n  };\r\n  return (\r\n    <Paper className=\"root-profile\">\r\n      <Grid container className=\"background-profile\">\r\n        <Grid item container xs={4} direction=\"column\" spacing={3}>\r\n          <Avatar className=\"avatar\" alt=\"Your Name\" src={employee?.image} />\r\n          <Grid item className=\"mt-32 mb-8\">\r\n            <div className=\"contact-item\">\r\n              <MailOutlineIcon />\r\n              <span>{employee?.email}</span>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <LocalPhoneOutlinedIcon />\r\n              <span>{employee?.phone}</span>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <HomeOutlinedIcon />\r\n              <span>{employee?.address}</span>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <PersonOutlineOutlinedIcon />\r\n              <span>\r\n                {\r\n                  GENDER?.find(\r\n                    (item) => item?.id === employee?.gender?.toString()\r\n                  )?.name\r\n                }\r\n              </span>\r\n            </div>\r\n            <div className=\"contact-item\">\r\n              <CalendarTodayOutlinedIcon />\r\n              <span>{moment(employee?.dateOfBirth).format(\"DD/MM/YYYY\")}</span>\r\n            </div>\r\n          </Grid>\r\n          <Grid item className=\"mt-32\">\r\n            <ValidatorForm onSubmit={handleSubmit}>\r\n              <Grid item>\r\n                <h3 className=\"font-weight-bold custom-font mt-c\">KỸ NĂNG</h3>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <TextValidator\r\n                    onChange={handleInputChange}\r\n                    name=\"skill\"\r\n                    value={employee?.skill || \"\"}\r\n                    fullWidth\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng nhập kỹ năng\"]}\r\n                    size=\"small\"\r\n                    multiline\r\n                    InputProps={{\r\n                      readOnly: isViewMode,\r\n                    }}\r\n                    className=\"textarea-dotted\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <h3 className=\"font-weight-bold  custom-font\">HOẠT ĐỘNG</h3>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <TextValidator\r\n                    onChange={handleInputChange}\r\n                    name=\"activity\"\r\n                    value={employee?.activity || \"\"}\r\n                    fullWidth\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng nhập hoạt động\"]}\r\n                    size=\"small\"\r\n                    multiline\r\n                    InputProps={{\r\n                      readOnly: isViewMode,\r\n                    }}\r\n                    className=\"textarea-dotted\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"primary\"\r\n                type=\"submit\"\r\n                ref={submitRef}\r\n                style={{ display: \"none\" }}\r\n              >\r\n                Lưu\r\n              </Button>\r\n            </ValidatorForm>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={8} direction=\"column\" spacing={3}>\r\n          <Grid item className=\"leftColumn ml-32\">\r\n            <div>\r\n              <Typography variant=\"h4\" className=\"name\">\r\n                {employee?.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className=\"position\">\r\n                {TEAM.find((item) => item.id === employee?.team)?.name}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item className=\"leftColumn ml-32 mt-16 mb-16\">\r\n            <h3 className=\"font-weight-bold my-auto custom-font\">MỤC TIÊU</h3>\r\n            <div className=\"jobObjective\">\r\n              <TextValidator\r\n                id=\"standard-basic\"\r\n                fullWidth\r\n                value={employee?.knowledge || \"\"}\r\n                type=\"text\"\r\n                name=\"knowledge\"\r\n                multiline\r\n                className=\"knowledge-input\"\r\n                onChange={handleInputChange}\r\n                placeholder={isViewMode ? \"Không có mục tiêu!\" : \"Nhập mục tiêu của bạn...\"}\r\n                InputProps={{\r\n                  readOnly: isViewMode,\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item className=\"leftColumn ml-32\">\r\n            <ExperiencesComponent employee={employee} isViewMode={isViewMode} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n"],"sourceRoot":""}